{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/pdf/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pages = _ref => {\n  _s();\n  let {\n    total,\n    width,\n    setWidth,\n    updatePDFSettings\n  } = _ref;\n  const [height, setHeight] = useState(1);\n  const onRenderSuccess = p => {\n    setWidth(p.originalWidth * 2);\n    setHeight(p.originalHeight * 2);\n    updatePDFSettings && updatePDFSettings(p.originalWidth * 2, p.originalHeight * 2, total);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Page, {\n      pageNumber: 1,\n      width: width,\n      height: height,\n      renderMode: \"svg\",\n      renderAnnotationLayer: false,\n      renderTextLayer: false,\n      renderInteractiveForms: false,\n      onRenderSuccess: onRenderSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Pages, \"eK9RDmkLoxnLeSM4544Y+xtOJO4=\");\n_c = Pages;\nconst MemoPages = /*#__PURE__*/React.memo(Pages);\n_c2 = MemoPages;\nconst CustomPDF = _ref2 => {\n  _s2();\n  let {\n    file: url,\n    updatePDFSettings\n  } = _ref2;\n  const filePath = useRef({\n    url: \"https://sandbox.edoclogic.com/Temp/\" + url\n  });\n  const [numPages, setNumPages] = useState(null);\n  const [width, setWidth] = useState(0);\n  const onDocumentLoadSuccess = _ref3 => {\n    let {\n      numPages\n    } = _ref3;\n    setNumPages(numPages);\n  };\n  return /*#__PURE__*/_jsxDEV(Document, {\n    file: filePath.current,\n    onLoadSuccess: onDocumentLoadSuccess,\n    children: /*#__PURE__*/_jsxDEV(MemoPages, {\n      width: width,\n      total: numPages,\n      setWidth: setWidth,\n      updatePDFSettings: updatePDFSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s2(CustomPDF, \"6G6sD6aFJ9cgGdJQM6q05HWrqQk=\");\n_c3 = CustomPDF;\nconst PDF = /*#__PURE__*/React.memo(CustomPDF);\n_c4 = PDF;\nexport default PDF;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Pages\");\n$RefreshReg$(_c2, \"MemoPages\");\n$RefreshReg$(_c3, \"CustomPDF\");\n$RefreshReg$(_c4, \"PDF\");","map":{"version":3,"names":["React","useState","useRef","Document","Page","jsxDEV","_jsxDEV","Pages","_ref","_s","total","width","setWidth","updatePDFSettings","height","setHeight","onRenderSuccess","p","originalWidth","originalHeight","children","pageNumber","renderMode","renderAnnotationLayer","renderTextLayer","renderInteractiveForms","fileName","_jsxFileName","lineNumber","columnNumber","_c","MemoPages","memo","_c2","CustomPDF","_ref2","_s2","file","url","filePath","numPages","setNumPages","onDocumentLoadSuccess","_ref3","current","onLoadSuccess","_c3","PDF","_c4","$RefreshReg$"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/pdf/index.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { PDFPageProxy } from \"react-pdf\";\r\nimport { Document, Page } from \"react-pdf/dist/esm/entry.webpack5\";\r\n\r\ninterface IProps {\r\n  file: any;\r\n  updatePDFSettings?(x: number, y: number, total: number): void;\r\n}\r\nconst Pages: React.FC<{\r\n  total: number;\r\n  setWidth(width: number): void;\r\n  updatePDFSettings?(x: number, y: number, total: number): void;\r\n  width: number;\r\n}> = ({ total, width, setWidth, updatePDFSettings }) => {\r\n  const [height, setHeight] = useState(1);\r\n\r\n  const onRenderSuccess = (p: PDFPageProxy) => {\r\n    setWidth(p.originalWidth * 2);\r\n    setHeight(p.originalHeight * 2);\r\n    updatePDFSettings &&\r\n      updatePDFSettings(p.originalWidth * 2, p.originalHeight * 2, total);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Page\r\n        pageNumber={1}\r\n        width={width}\r\n        height={height}\r\n        renderMode=\"svg\"\r\n        renderAnnotationLayer={false}\r\n        renderTextLayer={false}\r\n        renderInteractiveForms={false}\r\n        onRenderSuccess={onRenderSuccess}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MemoPages = React.memo(Pages);\r\n\r\nconst CustomPDF: React.FC<IProps> = ({ file: url, updatePDFSettings }) => {\r\n  const filePath = useRef({\r\n    url: \"https://sandbox.edoclogic.com/Temp/\" + url,\r\n  });\r\n  const [numPages, setNumPages] = useState<number | null>(null);\r\n  const [width, setWidth] = useState(0);\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }: { numPages: number }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  return (\r\n    <Document file={filePath.current} onLoadSuccess={onDocumentLoadSuccess}>\r\n      <MemoPages\r\n        width={width}\r\n        total={numPages!}\r\n        setWidth={setWidth}\r\n        updatePDFSettings={updatePDFSettings}\r\n      />\r\n    </Document>\r\n  );\r\n};\r\n\r\nconst PDF = React.memo(CustomPDF);\r\n\r\nexport default PDF;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAE/C,SAASC,QAAQ,EAAEC,IAAI,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnE,MAAMC,KAKJ,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAkB,CAAC,GAAAL,IAAA;EACjD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAMe,eAAe,GAAIC,CAAe,IAAK;IAC3CL,QAAQ,CAACK,CAAC,CAACC,aAAa,GAAG,CAAC,CAAC;IAC7BH,SAAS,CAACE,CAAC,CAACE,cAAc,GAAG,CAAC,CAAC;IAC/BN,iBAAiB,IACfA,iBAAiB,CAACI,CAAC,CAACC,aAAa,GAAG,CAAC,EAAED,CAAC,CAACE,cAAc,GAAG,CAAC,EAAET,KAAK,CAAC;EACvE,CAAC;EAED,oBACEJ,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACF,IAAI;MACHiB,UAAU,EAAE,CAAE;MACdV,KAAK,EAAEA,KAAM;MACbG,MAAM,EAAEA,MAAO;MACfQ,UAAU,EAAC,KAAK;MAChBC,qBAAqB,EAAE,KAAM;MAC7BC,eAAe,EAAE,KAAM;MACvBC,sBAAsB,EAAE,KAAM;MAC9BT,eAAe,EAAEA;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACpB,EAAA,CA7BIF,KAKJ;AAAAuB,EAAA,GALIvB,KAKJ;AA0BF,MAAMwB,SAAS,gBAAG/B,KAAK,CAACgC,IAAI,CAACzB,KAAK,CAAC;AAAC0B,GAAA,GAA9BF,SAAS;AAEf,MAAMG,SAA2B,GAAGC,KAAA,IAAsC;EAAAC,GAAA;EAAA,IAArC;IAAEC,IAAI,EAAEC,GAAG;IAAEzB;EAAkB,CAAC,GAAAsB,KAAA;EACnE,MAAMI,QAAQ,GAAGrC,MAAM,CAAC;IACtBoC,GAAG,EAAE,qCAAqC,GAAGA;EAC/C,CAAC,CAAC;EACF,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMyC,qBAAqB,GAAGC,KAAA,IAAwC;IAAA,IAAvC;MAAEH;IAA+B,CAAC,GAAAG,KAAA;IAC/DF,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,oBACElC,OAAA,CAACH,QAAQ;IAACkC,IAAI,EAAEE,QAAQ,CAACK,OAAQ;IAACC,aAAa,EAAEH,qBAAsB;IAAAtB,QAAA,eACrEd,OAAA,CAACyB,SAAS;MACRpB,KAAK,EAAEA,KAAM;MACbD,KAAK,EAAE8B,QAAU;MACjB5B,QAAQ,EAAEA,QAAS;MACnBC,iBAAiB,EAAEA;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACO;AAEf,CAAC;AAACO,GAAA,CArBIF,SAA2B;AAAAY,GAAA,GAA3BZ,SAA2B;AAuBjC,MAAMa,GAAG,gBAAG/C,KAAK,CAACgC,IAAI,CAACE,SAAS,CAAC;AAACc,GAAA,GAA5BD,GAAG;AAET,eAAeA,GAAG;AAAC,IAAAjB,EAAA,EAAAG,GAAA,EAAAa,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}