{"ast":null,"code":"import { ADD_ELEMENT, REMOVE_ELEMENT, EDIT_ELEMENT, SET_ELEMENT, SET_ELEMENT_ARRAY, USER_LOGOUT, RESET_STATE, DELETE_PDF_SETTINGS, REMOVE_PARTICIPANT } from \"../constants/actionTypes\";\nimport { createNotification, IActionType as INotificationActions } from \"../helpers/notificationHelper\";\nconst INITIAL_STATE = {\n  loader: false,\n  error: false,\n  message: \"\",\n  element: [],\n  total: 0,\n  elementStatus: []\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    type: \"\",\n    payload: {}\n  };\n  switch (type) {\n    case USER_LOGOUT:\n      {\n        return {\n          ...INITIAL_STATE\n        };\n      }\n    case RESET_STATE:\n      {\n        return {\n          ...INITIAL_STATE\n        };\n      }\n    case SET_ELEMENT:\n      {\n        const {\n          index,\n          element = [],\n          elementStatus = [],\n          total,\n          showNotification = true\n        } = payload;\n        const value = [...state.element];\n        value[index] = element;\n        const entry = [...state.elementStatus];\n        entry[index] = true;\n        if (showNotification) {\n          createNotification(INotificationActions.success, \"Elements Saved\", 2000, \"bottom-right\");\n        }\n        return {\n          ...state,\n          element: value,\n          elementStatus: entry,\n          total\n        };\n      }\n    case SET_ELEMENT_ARRAY:\n      {\n        console.log(\"Payload: \", payload);\n        const {\n          index,\n          elementStatus = []\n        } = payload;\n        const arr = new Array(index).fill(false);\n        return {\n          ...state,\n          elementStatus: arr\n        };\n      }\n    case ADD_ELEMENT:\n      {\n        const {\n          value\n        } = payload;\n        return {\n          ...state,\n          element: [...state.element, value]\n        };\n      }\n    case EDIT_ELEMENT:\n      {\n        const {\n          index,\n          value\n        } = payload;\n        const clone = [...state.element];\n        clone[index] = value;\n        return {\n          ...state,\n          element: clone\n        };\n      }\n    case REMOVE_ELEMENT:\n      {\n        const {\n          index\n        } = payload;\n        const newElement = [...state.element];\n        newElement.splice(index, 1);\n        return {\n          ...state,\n          element: newElement\n        };\n      }\n    case DELETE_PDF_SETTINGS:\n      {\n        const {\n          index\n        } = payload;\n        const element = [...state.element];\n        element.splice(index, 1);\n        return {\n          ...state,\n          element\n        };\n      }\n    case REMOVE_PARTICIPANT:\n      {\n        const {\n          key\n        } = payload;\n        const element = [...state.element];\n        element.forEach((els, i) => {\n          const arr = els.filter(el => el.signer !== key);\n          element[i] = arr;\n        });\n        return {\n          ...state,\n          element\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["ADD_ELEMENT","REMOVE_ELEMENT","EDIT_ELEMENT","SET_ELEMENT","SET_ELEMENT_ARRAY","USER_LOGOUT","RESET_STATE","DELETE_PDF_SETTINGS","REMOVE_PARTICIPANT","createNotification","IActionType","INotificationActions","INITIAL_STATE","loader","error","message","element","total","elementStatus","reducer","state","arguments","length","undefined","type","payload","index","showNotification","value","entry","success","console","log","arr","Array","fill","clone","newElement","splice","key","forEach","els","i","filter","el","signer"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/reducers/element.ts"],"sourcesContent":["import {\r\n  ADD_ELEMENT,\r\n  REMOVE_ELEMENT,\r\n  EDIT_ELEMENT,\r\n  SET_ELEMENT,\r\n  SET_ELEMENT_ARRAY,\r\n  USER_LOGOUT,\r\n  RESET_STATE,\r\n  DELETE_PDF_SETTINGS,\r\n  REMOVE_PARTICIPANT,\r\n} from \"../constants/actionTypes\";\r\nimport {\r\n  createNotification,\r\n  IActionType as INotificationActions,\r\n} from \"../helpers/notificationHelper\";\r\nimport { IElement } from \"../interface\";\r\n\r\nexport interface IStoreState {\r\n  loader: boolean;\r\n  error: boolean;\r\n  message: string;\r\n  element: IElement[][];\r\n  total: number;\r\n  elementStatus: boolean[];\r\n}\r\nconst INITIAL_STATE: IStoreState = {\r\n  loader: false,\r\n  error: false,\r\n  message: \"\",\r\n  element: [],\r\n  total: 0,\r\n  elementStatus:[],\r\n};\r\n\r\ninterface IActionType {\r\n  type: string;\r\n  payload: any;\r\n}\r\nconst reducer = (\r\n  state = INITIAL_STATE,\r\n  { type, payload }: IActionType = { type: \"\", payload: {} }\r\n): IStoreState => {\r\n  switch (type) {\r\n    case USER_LOGOUT: {\r\n      return { ...INITIAL_STATE };\r\n    }\r\n\r\n    case RESET_STATE: {\r\n      return { ...INITIAL_STATE };\r\n    }\r\n\r\n    case SET_ELEMENT: {\r\n      const { index, element = [], elementStatus = [], total, showNotification = true } = payload;\r\n      const value = [...state.element];\r\n      value[index] = element;\r\n      const entry = [...state.elementStatus];\r\n      entry[index] = true;\r\n\r\n      if (showNotification) {\r\n        createNotification(\r\n          INotificationActions.success,\r\n          \"Elements Saved\",\r\n          2000,\r\n          \"bottom-right\"\r\n        );\r\n      }\r\n      return {\r\n        ...state,\r\n        element: value,\r\n        elementStatus:entry,\r\n        total,\r\n      };\r\n    }\r\n\r\n    case SET_ELEMENT_ARRAY: {\r\n      console.log(\"Payload: \",payload)\r\n      const { index, elementStatus = [] } = payload;\r\n      const arr = new Array(index).fill(false);\r\n\r\n      return {\r\n        ...state,\r\n        elementStatus:arr,\r\n      };\r\n    }\r\n    \r\n    case ADD_ELEMENT: {\r\n      const { value } = payload;\r\n      return {\r\n        ...state,\r\n        element: [...state.element, value],\r\n      };\r\n    }\r\n\r\n    case EDIT_ELEMENT: {\r\n      const { index, value } = payload;\r\n      const clone = [...state.element];\r\n      clone[index] = value;\r\n      return {\r\n        ...state,\r\n        element: clone,\r\n      };\r\n    }\r\n\r\n    case REMOVE_ELEMENT: {\r\n      const { index } = payload;\r\n      const newElement = [...state.element];\r\n      newElement.splice(index, 1);\r\n      return {\r\n        ...state,\r\n\r\n        element: newElement,\r\n      };\r\n    }\r\n\r\n    case DELETE_PDF_SETTINGS: {\r\n      const { index } = payload;\r\n      const element = [...state.element];\r\n      element.splice(index, 1);\r\n      return {\r\n        ...state,\r\n        element,\r\n      };\r\n    }\r\n\r\n    case REMOVE_PARTICIPANT: {\r\n      const { key } = payload;\r\n      const element = [...state.element];\r\n      element.forEach((els, i) => {\r\n        const arr = els.filter((el) => el.signer !== key);\r\n        element[i] = arr;\r\n      });\r\n      return {\r\n        ...state,\r\n        element,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}