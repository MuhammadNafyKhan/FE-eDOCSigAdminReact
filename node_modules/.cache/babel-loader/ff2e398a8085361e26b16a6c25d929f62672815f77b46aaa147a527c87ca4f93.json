{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/input/DropZone/index.tsx\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { connect } from \"react-redux\";\nimport { setFiles } from \"../../../actions/file\";\nimport { ApiService } from \"../../../services/apiService\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CustomDropZone extends React.Component {\n  constructor(_p) {\n    super(_p);\n    this.toggleModal = () => {\n      this.setState({\n        showModal: !this.state.showModal\n      });\n    };\n    this.onProgress = p => {\n      const progress = p.loaded / p.total * 100;\n      this.setState({\n        uploadProgress: progress\n      });\n    };\n    this.handleScroll = () => {\n      const el = document.getElementById(\"scrolling_div_\" + this.props.name);\n      if (el) {\n        el.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    };\n    this.onFileChanges = async files => {\n      try {\n        this.setState({\n          uploading: true,\n          uploadProgress: 0\n        });\n        this.handleScroll();\n        const {\n          name,\n          values\n        } = this.props;\n        const formData = new FormData();\n        // formData.set(\"fileupload\", files[0]);\n        // formData.set(\"SID\", this.props.session);\n        // formData.set(\"CID\", this.props.controlid);\n        formData.set(\"file\", files[0]);\n        const filesRes = await ApiService.upload(formData, this.onProgress);\n        console.log(\"FielREs: \", filesRes);\n        let url = filesRes.result.fileUrl.toString();\n        let file_extn = url.split(\".\").pop();\n        filesRes.uniqnm = url.split(\"/\").pop();\n        if (name === \"sigining_docs\" && file_extn !== \"pdf\") {\n          const convertRes = await axios.post(\"https://sandbox.edoclogic.com/eDOCSigAdminsb/restconvert.php\", {\n            session: this.props.session,\n            controlid: this.props.controlid,\n            thefile: filesRes[0].uniqnm\n          });\n          filesRes[0].uniqnm = convertRes.data.file;\n        }\n        this.setState({\n          uploading: false,\n          uploadProgress: 0\n        });\n        filesRes.display_name = filesRes.result.originalFileName;\n        setTimeout(() => {\n          this.props.setFieldValue(name, [...values[name], filesRes]);\n        }, 0);\n        this.props.setFieldTouched(name, true);\n        if (!values[\"current_package_name\"]) {\n          const date = new Date();\n          const str = date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n          this.props.setFieldValue(\"current_package_name\", filesRes.display_name + \" \" + str, false);\n          //*    this.props.setFieldTouched(\"current_package_name\", true, false);\n        }\n\n        if (this.state.showApplyTemplate) {\n          this.props.toggleTemplateModal && this.props.toggleTemplateModal(filesRes.uniqnm);\n          this.setState({\n            showApplyTemplate: false\n          });\n        }\n      } catch (e) {\n        this.setState({\n          uploading: false,\n          uploadProgress: 0\n        });\n      }\n    };\n    this.state = {\n      files: [],\n      showModal: false,\n      showApplyTemplate: false,\n      uploading: false,\n      uploadProgress: 0\n    };\n  }\n  // onFileChanges = async (files: any[]) => {\n  //   try {\n  //     this.setState({ uploading: true, uploadProgress: 0 });\n  //     this.handleScroll();\n  //     const { name, values } = this.props;\n  //     const formData = new FormData();\n  //     formData.set(\"fileupload\", files[0]);\n  //     formData.set(\"SID\", this.props.session);\n  //     formData.set(\"CID\", this.props.controlid);\n  //     const filesRes = await ApiService.upload(formData, this.onProgress);\n  //     if (name === \"sigining_docs\" && filesRes[0].file_extn !== \"pdf\") {\n  //       const convertRes = await axios.post(\n  //         \"https://sandbox.edoclogic.com/eDOCSigAdminsb/restconvert.php\",\n  //         {\n  //           session: this.props.session,\n  //           controlid: this.props.controlid,\n  //           thefile: filesRes[0].uniqnm,\n  //         }\n  //       );\n  //       filesRes[0].uniqnm = convertRes.data.file;\n  //     }\n  //     this.setState({ uploading: false, uploadProgress: 0 });\n  //     filesRes[0].display_name = filesRes[0].filename.replace(\n  //       \".\" + filesRes[0].file_extn,\n  //       \"\"\n  //     );\n  //     setTimeout(() => {\n  //       this.props.setFieldValue!(name, [...values[name], filesRes[0]]);\n  //     }, 0);\n  //     this.props.setFieldTouched(name, true);\n\n  //     if (!values[\"current_package_name\"]) {\n  //       const date = new Date();\n  //       const str =\n  //         date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n\n  //       this.props.setFieldValue(\n  //         \"current_package_name\",\n  //         filesRes[0].display_name + \" \" + str,\n  //         false\n  //       );\n  //       //*    this.props.setFieldTouched(\"current_package_name\", true, false);\n  //     }\n\n  //     if (this.state.showApplyTemplate) {\n  //       this.props.toggleTemplateModal &&\n  //         this.props.toggleTemplateModal(filesRes[0].uniqnm);\n  //       this.setState({ showApplyTemplate: false });\n  //     }\n  //   } catch (e) {\n  //     this.setState({ uploading: false, uploadProgress: 0 });\n  //   }\n  // };\n  render() {\n    const {\n      showModal\n    } = this.state;\n    const {\n      children,\n      header_text,\n      color,\n      modal,\n      name = \"sig_doc\"\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: this.onFileChanges,\n      onFileDialogCancel: () => {\n        this.setState({\n          showApplyTemplate: false\n        });\n      },\n      multiple: false,\n      accept: {\n        \"image/png\": [\".png\"],\n        \"image/jpg\": [\".jpg\"],\n        \"image/tiff\": [\".tiff\"],\n        \"application/pdf\": [\".pdf\"],\n        \"application/msword\": [\".doc\", \".docx\"]\n      },\n      children: _ref => {\n        let {\n          getRootProps,\n          getInputProps\n        } = _ref;\n        const rootProps = getRootProps();\n        const inputProps = getInputProps();\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"dropzone_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dropzone_header background_${color}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"header_text\",\n              children: header_text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: this.toggleModal,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-light fa-file-plus FAUploadIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `dropzone_container_main border_${color}`,\n            children: this.props.values && this.props.values[name].length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              ...rootProps,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...inputProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: e => {\n                  if (this.props.values) if (this.props.values[name].length > 0) {\n                    e.stopPropagation();\n                    return;\n                  } else {\n                    e.stopPropagation();\n                    this.toggleModal();\n                  }\n                },\n                children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"w-100\",\n                  children: this.state.uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress w-100 mt-2\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"progress-bar progress-bar-striped progress-bar-animated background_\" + color,\n                      role: \"progressbar\",\n                      style: {\n                        width: this.state.uploadProgress + \"%\"\n                      },\n                      \"aria-valuenow\": this.state.uploadProgress,\n                      \"aria-valuemin\": 0,\n                      \"aria-valuemax\": 100,\n                      children: [this.state.uploadProgress.toFixed(0), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-100\",\n              children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-100 p-2\",\n                children: this.state.uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress w-100 mt-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress-bar progress-bar-striped progress-bar-animated background_\" + color,\n                    role: \"progressbar\",\n                    style: {\n                      width: this.state.uploadProgress + \"%\"\n                    },\n                    \"aria-valuenow\": this.state.uploadProgress,\n                    \"aria-valuemin\": 0,\n                    \"aria-valuemax\": 100,\n                    children: [this.state.uploadProgress.toFixed(0), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"scrolling_div_\" + name,\n                style: {\n                  height: \"24px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), showModal && /*#__PURE__*/React.cloneElement(modal, {\n            onClose: this.toggleModal,\n            onUploadClick: e => {\n              rootProps.onClick && rootProps.onClick(e);\n            },\n            onUploadandApplyTemp: async e => {\n              rootProps.onClick && rootProps.onClick(e);\n              this.setState({\n                showApplyTemplate: true\n              });\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n}\n// const CustomDropZone: React.FC<IProps> = ({\n//   header_text,\n//   children,\n//   color,\n//   setFiles: setFilesinStore,\n//   modal,\n//   toggleTemplateModal,\n//   onClick,\n// }) => {\n//   const [files, setFiles] = useState<any[]>([]);\n//   const [showModal, setShowModal] = useState(false);\n//   const [showApplyTemplate, setShowApplyTemplate] = useState(false);\n\n//*   const toggleModal = () => {\n//     setShowModal(!showModal);\n//   };\n//   useEffect(() => {\n//     setFilesinStore(files);\n//   }, [files]);\n\n//   const onFileChanges = (acceptedFiles: any) => {\n//     console.log({ showApplyTemplate, toggleTemplateModal });\n//     setFiles(acceptedFiles);\n//     if (showApplyTemplate) {\n//       toggleTemplateModal && toggleTemplateModal();\n//       setShowApplyTemplate(false);\n//     }\n//   };\n//   console.log({ showApplyTemplate });\n//   return (\n//     <Dropzone\n//       onDrop={onFileChanges}\n//       onFileDialogCancel={() => {\n//         setShowApplyTemplate(false);\n//       }}\n//       multiple={false}\n//       accept={{\n//         \"image/png\": [\".png\"],\n//         \"image/jpg\": [\".jpg\"],\n//         \"image/tiff\": [\".tiff\"],\n//         \"application/pdf\": [\".pdf\"],\n//         \"application/msword\": [\".doc\", \".docx\"],\n//       }}\n//     >\n//       {({ getRootProps, getInputProps }) => {\n//         const rootProps = getRootProps();\n//         const inputProps = getInputProps();\n\n//         return (\n//           <section className=\"dropzone_container\">\n//             <div className={`dropzone_header background_${color}`}>\n//               <p className=\"header_text\">{header_text}</p>\n//               <div onClick={toggleModal}>\n//                 <i className=\"fa-light fa-file-plus FAUploadIcon\"></i>\n//               </div>\n//             </div>\n//             <div className={`dropzone_container_main border_${color}`}>\n//               <div className=\"dropzone_selected_files\">\n//                 {files.map((f, i) => {\n//                   return (\n//                     <span className=\"dropzone_file\" key={i}>\n//                       {f.name}\n//                     </span>\n//                   );\n//                 })}\n//               </div>\n\n//               {files.length === 0 && (\n//                 <div {...rootProps}>\n//                   <input {...inputProps} />\n//                   <div\n//                     onClick={(e) => {\n//                       e.stopPropagation();\n//                       toggleModal();\n//                     }}\n//                   >\n//                     {children}\n//                   </div>\n//                 </div>\n//               )}\n//             </div>\n//             {showModal &&\n//               React.cloneElement(modal, {\n//                 onClose: toggleModal,\n//                 onUploadClick: (e: any) => {\n//                   rootProps.onClick && rootProps.onClick(e as any);\n//                 },\n//                 onUploadandApplyTemp: async (e: any) => {\n//                   rootProps.onClick && rootProps.onClick(e as any);\n//                   setShowApplyTemplate(true);\n//                 },\n//               })}\n//           </section>\n//         );\n//       }}\n//     </Dropzone>\n//   );\n// };\n\nconst mapStateToProps = state => {\n  const {\n    auth\n  } = state;\n  const {\n    user\n  } = auth;\n  const {\n    controlid = \"\",\n    session = \"\"\n  } = user || {};\n  return {\n    controlid,\n    session\n  };\n};\nexport default connect(mapStateToProps, {\n  setFiles\n})(CustomDropZone);","map":{"version":3,"names":["axios","React","Dropzone","connect","setFiles","ApiService","jsxDEV","_jsxDEV","CustomDropZone","Component","constructor","p","toggleModal","setState","showModal","state","onProgress","progress","loaded","total","uploadProgress","handleScroll","el","document","getElementById","props","name","scrollIntoView","behavior","onFileChanges","files","uploading","values","formData","FormData","set","filesRes","upload","console","log","url","result","fileUrl","toString","file_extn","split","pop","uniqnm","convertRes","post","session","controlid","thefile","data","file","display_name","originalFileName","setTimeout","setFieldValue","setFieldTouched","date","Date","str","getMonth","getDate","getFullYear","showApplyTemplate","toggleTemplateModal","e","render","children","header_text","color","modal","onDrop","onFileDialogCancel","multiple","accept","_ref","getRootProps","getInputProps","rootProps","inputProps","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","stopPropagation","role","style","width","toFixed","id","height","cloneElement","onClose","onUploadClick","onUploadandApplyTemp","mapStateToProps","auth","user"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/input/DropZone/index.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { JSXElementConstructor } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFiles } from \"../../../actions/file\";\r\nimport { IStoreState } from \"../../../reducers\";\r\nimport { ApiService } from \"../../../services/apiService\";\r\n\r\nimport \"./style.css\";\r\ninterface IProps {\r\n  children?: any;\r\n  header_text: string;\r\n  color: string;\r\n  session: string;\r\n  controlid: string;\r\n  values: any;\r\n  setFiles: (val: any) => void;\r\n  onClick?(): void;\r\n  toggleTemplateModal?(filename: string): void;\r\n  name: string;\r\n  setFieldValue(\r\n    field: string,\r\n    value: any,\r\n    shouldValidate?: boolean | undefined\r\n  ): void;\r\n  setFieldTouched(\r\n    field: string,\r\n    isTouched?: boolean | undefined,\r\n    shouldValidate?: boolean | undefined\r\n  ): void;\r\n  modal: React.ReactElement<\r\n    {\r\n      onClose(): void;\r\n      onTemplateClick(): void;\r\n      onUploadClick(e: any): void;\r\n      onUploadandApplyTemp?(e: any): void;\r\n    },\r\n    string | JSXElementConstructor<any>\r\n  >;\r\n}\r\ninterface IState {\r\n  files: any[];\r\n  showModal: boolean;\r\n  showApplyTemplate: boolean;\r\n  uploading: boolean;\r\n  uploadProgress: number;\r\n}\r\nclass CustomDropZone extends React.Component<IProps, IState> {\r\n  constructor(p: IProps) {\r\n    super(p);\r\n    this.state = {\r\n      files: [],\r\n      showModal: false,\r\n      showApplyTemplate: false,\r\n      uploading: false,\r\n      uploadProgress: 0,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ showModal: !this.state.showModal });\r\n  };\r\n\r\n  onProgress = (p: any) => {\r\n    const progress = (p.loaded / p.total) * 100;\r\n    this.setState({ uploadProgress: progress });\r\n  };\r\n\r\n  handleScroll = () => {\r\n    const el = document.getElementById(\"scrolling_div_\" + this.props.name);\r\n    if (el) {\r\n      el.scrollIntoView({\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onFileChanges = async (files: any[]) => {\r\n    try {\r\n      this.setState({ uploading: true, uploadProgress: 0 });\r\n      this.handleScroll();\r\n      const { name, values } = this.props;\r\n      const formData = new FormData();\r\n      // formData.set(\"fileupload\", files[0]);\r\n      // formData.set(\"SID\", this.props.session);\r\n      // formData.set(\"CID\", this.props.controlid);\r\n      formData.set(\"file\", files[0]);\r\n      const filesRes = await ApiService.upload(formData, this.onProgress);\r\n      console.log(\"FielREs: \", filesRes);\r\n      let url = filesRes.result.fileUrl.toString();\r\n      let file_extn = url.split(\".\").pop();\r\n      filesRes.uniqnm = url.split(\"/\").pop();\r\n      if (name === \"sigining_docs\" && file_extn !== \"pdf\") {\r\n        const convertRes = await axios.post(\r\n          \"https://sandbox.edoclogic.com/eDOCSigAdminsb/restconvert.php\",\r\n          {\r\n            session: this.props.session,\r\n            controlid: this.props.controlid,\r\n            thefile: filesRes[0].uniqnm,\r\n          }\r\n        );\r\n        filesRes[0].uniqnm = convertRes.data.file;\r\n      }\r\n      this.setState({ uploading: false, uploadProgress: 0 });\r\n      filesRes.display_name = filesRes.result.originalFileName;\r\n      setTimeout(() => {\r\n        this.props.setFieldValue!(name, [...values[name], filesRes]);\r\n      }, 0);\r\n      this.props.setFieldTouched(name, true);\r\n\r\n      if (!values[\"current_package_name\"]) {\r\n        const date = new Date();\r\n        const str =\r\n          date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\r\n\r\n        this.props.setFieldValue(\r\n          \"current_package_name\",\r\n          filesRes.display_name + \" \" + str,\r\n          false\r\n        );\r\n        //*    this.props.setFieldTouched(\"current_package_name\", true, false);\r\n      }\r\n\r\n      if (this.state.showApplyTemplate) {\r\n        this.props.toggleTemplateModal &&\r\n          this.props.toggleTemplateModal(filesRes.uniqnm);\r\n        this.setState({ showApplyTemplate: false });\r\n      }\r\n    } catch (e) {\r\n      this.setState({ uploading: false, uploadProgress: 0 });\r\n    }\r\n  };\r\n\r\n  // onFileChanges = async (files: any[]) => {\r\n  //   try {\r\n  //     this.setState({ uploading: true, uploadProgress: 0 });\r\n  //     this.handleScroll();\r\n  //     const { name, values } = this.props;\r\n  //     const formData = new FormData();\r\n  //     formData.set(\"fileupload\", files[0]);\r\n  //     formData.set(\"SID\", this.props.session);\r\n  //     formData.set(\"CID\", this.props.controlid);\r\n  //     const filesRes = await ApiService.upload(formData, this.onProgress);\r\n  //     if (name === \"sigining_docs\" && filesRes[0].file_extn !== \"pdf\") {\r\n  //       const convertRes = await axios.post(\r\n  //         \"https://sandbox.edoclogic.com/eDOCSigAdminsb/restconvert.php\",\r\n  //         {\r\n  //           session: this.props.session,\r\n  //           controlid: this.props.controlid,\r\n  //           thefile: filesRes[0].uniqnm,\r\n  //         }\r\n  //       );\r\n  //       filesRes[0].uniqnm = convertRes.data.file;\r\n  //     }\r\n  //     this.setState({ uploading: false, uploadProgress: 0 });\r\n  //     filesRes[0].display_name = filesRes[0].filename.replace(\r\n  //       \".\" + filesRes[0].file_extn,\r\n  //       \"\"\r\n  //     );\r\n  //     setTimeout(() => {\r\n  //       this.props.setFieldValue!(name, [...values[name], filesRes[0]]);\r\n  //     }, 0);\r\n  //     this.props.setFieldTouched(name, true);\r\n\r\n  //     if (!values[\"current_package_name\"]) {\r\n  //       const date = new Date();\r\n  //       const str =\r\n  //         date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\r\n\r\n  //       this.props.setFieldValue(\r\n  //         \"current_package_name\",\r\n  //         filesRes[0].display_name + \" \" + str,\r\n  //         false\r\n  //       );\r\n  //       //*    this.props.setFieldTouched(\"current_package_name\", true, false);\r\n  //     }\r\n\r\n  //     if (this.state.showApplyTemplate) {\r\n  //       this.props.toggleTemplateModal &&\r\n  //         this.props.toggleTemplateModal(filesRes[0].uniqnm);\r\n  //       this.setState({ showApplyTemplate: false });\r\n  //     }\r\n  //   } catch (e) {\r\n  //     this.setState({ uploading: false, uploadProgress: 0 });\r\n  //   }\r\n  // };\r\n  public render() {\r\n    const { showModal } = this.state;\r\n    const {\r\n      children,\r\n      header_text,\r\n      color,\r\n      modal,\r\n      name = \"sig_doc\",\r\n    } = this.props;\r\n\r\n    return (\r\n      <Dropzone\r\n        onDrop={this.onFileChanges}\r\n        onFileDialogCancel={() => {\r\n          this.setState({ showApplyTemplate: false });\r\n        }}\r\n        multiple={false}\r\n        accept={{\r\n          \"image/png\": [\".png\"],\r\n          \"image/jpg\": [\".jpg\"],\r\n          \"image/tiff\": [\".tiff\"],\r\n          \"application/pdf\": [\".pdf\"],\r\n          \"application/msword\": [\".doc\", \".docx\"],\r\n        }}\r\n      >\r\n        {({ getRootProps, getInputProps }) => {\r\n          const rootProps = getRootProps();\r\n          const inputProps = getInputProps();\r\n\r\n          return (\r\n            <section className=\"dropzone_container\">\r\n              <div className={`dropzone_header background_${color}`}>\r\n                <p className=\"header_text\">{header_text}</p>\r\n                <div onClick={this.toggleModal}>\r\n                  <i className=\"fa-light fa-file-plus FAUploadIcon\"></i>\r\n                </div>\r\n              </div>\r\n              <div className={`dropzone_container_main border_${color}`}>\r\n                {this.props.values && this.props.values[name].length === 0 ? (\r\n                  <div {...rootProps}>\r\n                    <input {...inputProps} />\r\n                    <div\r\n                      onClick={(e) => {\r\n                        if (this.props.values)\r\n                          if (this.props.values[name].length > 0) {\r\n                            e.stopPropagation();\r\n                            return;\r\n                          } else {\r\n                            e.stopPropagation();\r\n                            this.toggleModal();\r\n                          }\r\n                      }}\r\n                    >\r\n                      {children}\r\n                      <div className=\"w-100\">\r\n                        {this.state.uploading && (\r\n                          <div className=\"progress w-100 mt-2\">\r\n                            <div\r\n                              className={\r\n                                \"progress-bar progress-bar-striped progress-bar-animated background_\" +\r\n                                color\r\n                              }\r\n                              role=\"progressbar\"\r\n                              style={{ width: this.state.uploadProgress + \"%\" }}\r\n                              aria-valuenow={this.state.uploadProgress}\r\n                              aria-valuemin={0}\r\n                              aria-valuemax={100}\r\n                            >\r\n                              {this.state.uploadProgress.toFixed(0)}%\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"w-100\">\r\n                    {children}\r\n                    <div className=\"w-100 p-2\">\r\n                      {this.state.uploading && (\r\n                        <div className=\"progress w-100 mt-2\">\r\n                          <div\r\n                            className={\r\n                              \"progress-bar progress-bar-striped progress-bar-animated background_\" +\r\n                              color\r\n                            }\r\n                            role=\"progressbar\"\r\n                            style={{ width: this.state.uploadProgress + \"%\" }}\r\n                            aria-valuenow={this.state.uploadProgress}\r\n                            aria-valuemin={0}\r\n                            aria-valuemax={100}\r\n                          >\r\n                            {this.state.uploadProgress.toFixed(0)}%\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div\r\n                      id={\"scrolling_div_\" + name}\r\n                      style={{ height: \"24px\" }}\r\n                    ></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {showModal &&\r\n                React.cloneElement(modal, {\r\n                  onClose: this.toggleModal,\r\n                  onUploadClick: (e: any) => {\r\n                    rootProps.onClick && rootProps.onClick(e as any);\r\n                  },\r\n                  onUploadandApplyTemp: async (e: any) => {\r\n                    rootProps.onClick && rootProps.onClick(e as any);\r\n                    this.setState({ showApplyTemplate: true });\r\n                  },\r\n                })}\r\n            </section>\r\n          );\r\n        }}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n// const CustomDropZone: React.FC<IProps> = ({\r\n//   header_text,\r\n//   children,\r\n//   color,\r\n//   setFiles: setFilesinStore,\r\n//   modal,\r\n//   toggleTemplateModal,\r\n//   onClick,\r\n// }) => {\r\n//   const [files, setFiles] = useState<any[]>([]);\r\n//   const [showModal, setShowModal] = useState(false);\r\n//   const [showApplyTemplate, setShowApplyTemplate] = useState(false);\r\n\r\n//*   const toggleModal = () => {\r\n//     setShowModal(!showModal);\r\n//   };\r\n//   useEffect(() => {\r\n//     setFilesinStore(files);\r\n//   }, [files]);\r\n\r\n//   const onFileChanges = (acceptedFiles: any) => {\r\n//     console.log({ showApplyTemplate, toggleTemplateModal });\r\n//     setFiles(acceptedFiles);\r\n//     if (showApplyTemplate) {\r\n//       toggleTemplateModal && toggleTemplateModal();\r\n//       setShowApplyTemplate(false);\r\n//     }\r\n//   };\r\n//   console.log({ showApplyTemplate });\r\n//   return (\r\n//     <Dropzone\r\n//       onDrop={onFileChanges}\r\n//       onFileDialogCancel={() => {\r\n//         setShowApplyTemplate(false);\r\n//       }}\r\n//       multiple={false}\r\n//       accept={{\r\n//         \"image/png\": [\".png\"],\r\n//         \"image/jpg\": [\".jpg\"],\r\n//         \"image/tiff\": [\".tiff\"],\r\n//         \"application/pdf\": [\".pdf\"],\r\n//         \"application/msword\": [\".doc\", \".docx\"],\r\n//       }}\r\n//     >\r\n//       {({ getRootProps, getInputProps }) => {\r\n//         const rootProps = getRootProps();\r\n//         const inputProps = getInputProps();\r\n\r\n//         return (\r\n//           <section className=\"dropzone_container\">\r\n//             <div className={`dropzone_header background_${color}`}>\r\n//               <p className=\"header_text\">{header_text}</p>\r\n//               <div onClick={toggleModal}>\r\n//                 <i className=\"fa-light fa-file-plus FAUploadIcon\"></i>\r\n//               </div>\r\n//             </div>\r\n//             <div className={`dropzone_container_main border_${color}`}>\r\n//               <div className=\"dropzone_selected_files\">\r\n//                 {files.map((f, i) => {\r\n//                   return (\r\n//                     <span className=\"dropzone_file\" key={i}>\r\n//                       {f.name}\r\n//                     </span>\r\n//                   );\r\n//                 })}\r\n//               </div>\r\n\r\n//               {files.length === 0 && (\r\n//                 <div {...rootProps}>\r\n//                   <input {...inputProps} />\r\n//                   <div\r\n//                     onClick={(e) => {\r\n//                       e.stopPropagation();\r\n//                       toggleModal();\r\n//                     }}\r\n//                   >\r\n//                     {children}\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </div>\r\n//             {showModal &&\r\n//               React.cloneElement(modal, {\r\n//                 onClose: toggleModal,\r\n//                 onUploadClick: (e: any) => {\r\n//                   rootProps.onClick && rootProps.onClick(e as any);\r\n//                 },\r\n//                 onUploadandApplyTemp: async (e: any) => {\r\n//                   rootProps.onClick && rootProps.onClick(e as any);\r\n//                   setShowApplyTemplate(true);\r\n//                 },\r\n//               })}\r\n//           </section>\r\n//         );\r\n//       }}\r\n//     </Dropzone>\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state: IStoreState) => {\r\n  const { auth } = state;\r\n  const { user } = auth;\r\n  const { controlid = \"\", session = \"\" } = user || {};\r\n  return { controlid, session };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setFiles })(CustomDropZone);\r\n"],"mappings":"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;QAAA,QACI;MAEd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACQ;EAEf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMc,eAAe,GAAItF,KAAkB,IAAK;EAC9C,MAAM;IAAEuF;EAAK,CAAC,GAAGvF,KAAK;EACtB,MAAM;IAAEwF;EAAK,CAAC,GAAGD,IAAI;EACrB,MAAM;IAAEnD,SAAS,GAAG,EAAE;IAAED,OAAO,GAAG;EAAG,CAAC,GAAGqD,IAAI,IAAI,CAAC,CAAC;EACnD,OAAO;IAAEpD,SAAS;IAAED;EAAQ,CAAC;AAC/B,CAAC;AAED,eAAe/C,OAAO,CAACkG,eAAe,EAAE;EAAEjG;AAAS,CAAC,CAAC,CAACI,cAAc,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}