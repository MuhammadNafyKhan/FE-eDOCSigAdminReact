{"ast":null,"code":"import axios from \"axios\";\nimport store from \"../store/store\";\nimport { onLogout, updateActivityTimeout, updateLogoutTimeout, updateActivityModal } from \"../actions/auth\";\nimport { shouldLogout } from \"../helpers/shouldLogout\";\nimport { API_BASE_URL, LOGOUT_TIMEOUT, ACTIVITY_TIMEOUT, UPLOAD_URL } from \"../constants\";\nimport { createNotification, IActionType } from \"../helpers/notificationHelper\";\nexport class ApiService {}\nApiService.get = async path => {\n  const url = path.includes(\"http\") ? path : API_BASE_URL + path;\n  const res = await axios.get(url);\n  if (res.data && res.data.error) {\n    const result = shouldLogout(res.data.error);\n    if (result) {\n      createNotification(IActionType.error, res.data.error, false);\n      store.dispatch(onLogout());\n    }\n  } else {\n    const logoutTimeout = setTimeout(() => {\n      createNotification(IActionType.error, \"Session timeout\", false);\n      store.dispatch(onLogout());\n    }, LOGOUT_TIMEOUT);\n    const lastActivityTimeout = setTimeout(() => {\n      store.dispatch(updateActivityModal(true));\n    }, ACTIVITY_TIMEOUT);\n    store.dispatch(updateLogoutTimeout(logoutTimeout));\n    store.dispatch(updateActivityTimeout(lastActivityTimeout));\n  }\n  return res.data;\n};\nApiService.post = async (path, body) => {\n  const url = path.includes(\"http\") ? path : API_BASE_URL + path;\n  const res = await axios.post(url, body);\n  if (res.data && res.data.error) {\n    const result = shouldLogout(res.data.error);\n    if (result) {\n      createNotification(IActionType.error, res.data.error, false);\n      store.dispatch(onLogout());\n    }\n  } else {\n    const logoutTimeout = setTimeout(() => {\n      createNotification(IActionType.error, \"Session timeout\", false);\n      store.dispatch(onLogout());\n    }, LOGOUT_TIMEOUT);\n    const lastActivityTimeout = setTimeout(() => {\n      store.dispatch(updateActivityModal(true));\n    }, ACTIVITY_TIMEOUT);\n    store.dispatch(updateLogoutTimeout(logoutTimeout));\n    store.dispatch(updateActivityTimeout(lastActivityTimeout));\n  }\n  return res.data;\n};\nApiService.patch = async (path, body) => {\n  const url = path.includes(\"http\") ? path : API_BASE_URL + path;\n  const res = await axios.patch(url, body);\n  if (res.data && res.data.error) {\n    const result = shouldLogout(res.data.error);\n    if (result) {\n      createNotification(IActionType.error, res.data.error, false);\n      store.dispatch(onLogout());\n    }\n  } else {\n    const logoutTimeout = setTimeout(() => {\n      createNotification(IActionType.error, \"Session timeout\", false);\n      store.dispatch(onLogout());\n    }, LOGOUT_TIMEOUT);\n    const lastActivityTimeout = setTimeout(() => {\n      store.dispatch(updateActivityModal(true));\n    }, ACTIVITY_TIMEOUT);\n    store.dispatch(updateLogoutTimeout(logoutTimeout));\n    store.dispatch(updateActivityTimeout(lastActivityTimeout));\n  }\n  return res.data;\n};\nApiService.delete = async path => {\n  const url = path.includes(\"http\") ? path : API_BASE_URL + path;\n  const res = await axios.delete(url);\n  if (res.data && res.data.error) {\n    const result = shouldLogout(res.data.error);\n    if (result) {\n      createNotification(IActionType.error, res.data.error, false);\n      store.dispatch(onLogout());\n    }\n  } else {\n    const logoutTimeout = setTimeout(() => {\n      createNotification(IActionType.error, \"Session timeout\", false);\n      store.dispatch(onLogout());\n    }, LOGOUT_TIMEOUT);\n    const lastActivityTimeout = setTimeout(() => {\n      store.dispatch(updateActivityModal(true));\n    }, ACTIVITY_TIMEOUT);\n    store.dispatch(updateLogoutTimeout(logoutTimeout));\n    store.dispatch(updateActivityTimeout(lastActivityTimeout));\n  }\n  return res.data;\n};\nApiService.upload = async (body, onProgress) => {\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n  const res = await axios.post(UPLOAD_URL, body, {\n    ...config,\n    onUploadProgress: onProgress\n  });\n  if (res.data && res.data.error) {\n    const result = shouldLogout(res.data.error);\n    if (result) {\n      createNotification(IActionType.error, res.data.error, false);\n      store.dispatch(onLogout());\n    }\n  } else {\n    if (res.data.status === false) {\n      const result = shouldLogout(res.data.message);\n      if (result) {\n        createNotification(IActionType.error, res.data.message, false);\n        store.dispatch(onLogout());\n      }\n    } else {\n      const logoutTimeout = setTimeout(() => {\n        createNotification(IActionType.error, \"Session timeout\", false);\n        store.dispatch(onLogout());\n      }, LOGOUT_TIMEOUT);\n      const lastActivityTimeout = setTimeout(() => {\n        store.dispatch(updateActivityModal(true));\n      }, ACTIVITY_TIMEOUT);\n      store.dispatch(updateLogoutTimeout(logoutTimeout));\n      store.dispatch(updateActivityTimeout(lastActivityTimeout));\n    }\n  }\n  return res.data;\n};","map":{"version":3,"names":["axios","store","onLogout","updateActivityTimeout","updateLogoutTimeout","updateActivityModal","shouldLogout","API_BASE_URL","LOGOUT_TIMEOUT","ACTIVITY_TIMEOUT","UPLOAD_URL","createNotification","IActionType","ApiService","get","path","url","includes","res","data","error","result","dispatch","logoutTimeout","setTimeout","lastActivityTimeout","post","body","patch","delete","upload","onProgress","config","headers","onUploadProgress","status","message"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/services/apiService.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport store from \"../store/store\";\r\nimport {\r\n  onLogout,\r\n  updateActivityTimeout,\r\n  updateLogoutTimeout,\r\n  updateActivityModal,\r\n} from \"../actions/auth\";\r\nimport { shouldLogout } from \"../helpers/shouldLogout\";\r\nimport {\r\n  API_BASE_URL,\r\n  LOGOUT_TIMEOUT,\r\n  ACTIVITY_TIMEOUT,\r\n  UPLOAD_URL,\r\n} from \"../constants\";\r\nimport { createNotification, IActionType } from \"../helpers/notificationHelper\";\r\ninterface IBody {\r\n  [key: string]: any;\r\n}\r\nexport class ApiService {\r\n  public static get = async (path: string) => {\r\n    const url = path.includes(\"http\") ? path : API_BASE_URL + path;\r\n    const res = await axios.get(url);\r\n    if (res.data && res.data.error) {\r\n      const result = shouldLogout(res.data.error);\r\n      if (result) {\r\n        createNotification(IActionType.error, res.data.error, false);\r\n        store.dispatch(onLogout());\r\n      }\r\n    } else {\r\n      const logoutTimeout = setTimeout(() => {\r\n        createNotification(IActionType.error, \"Session timeout\", false);\r\n        store.dispatch(onLogout());\r\n      }, LOGOUT_TIMEOUT);\r\n      const lastActivityTimeout = setTimeout(() => {\r\n        store.dispatch(updateActivityModal(true));\r\n      }, ACTIVITY_TIMEOUT);\r\n      store.dispatch(updateLogoutTimeout(logoutTimeout));\r\n      store.dispatch(updateActivityTimeout(lastActivityTimeout));\r\n    }\r\n    return res.data;\r\n  };\r\n\r\n  public static post = async (path: string, body: IBody) => {\r\n    const url = path.includes(\"http\") ? path : API_BASE_URL + path;\r\n    const res = await axios.post(url, body);\r\n    if (res.data && res.data.error) {\r\n      const result = shouldLogout(res.data.error);\r\n      if (result) {\r\n        createNotification(IActionType.error, res.data.error, false);\r\n        store.dispatch(onLogout());\r\n      }\r\n    } else {\r\n      const logoutTimeout = setTimeout(() => {\r\n        createNotification(IActionType.error, \"Session timeout\", false);\r\n        store.dispatch(onLogout());\r\n      }, LOGOUT_TIMEOUT);\r\n      const lastActivityTimeout = setTimeout(() => {\r\n        store.dispatch(updateActivityModal(true));\r\n      }, ACTIVITY_TIMEOUT);\r\n      store.dispatch(updateLogoutTimeout(logoutTimeout));\r\n      store.dispatch(updateActivityTimeout(lastActivityTimeout));\r\n    }\r\n    return res.data;\r\n  };\r\n\r\n  public static patch = async (path: string, body: IBody) => {\r\n    const url = path.includes(\"http\") ? path : API_BASE_URL + path;\r\n    const res = await axios.patch(url, body);\r\n    if (res.data && res.data.error) {\r\n      const result = shouldLogout(res.data.error);\r\n      if (result) {\r\n        createNotification(IActionType.error, res.data.error, false);\r\n        store.dispatch(onLogout());\r\n      }\r\n    } else {\r\n      const logoutTimeout = setTimeout(() => {\r\n        createNotification(IActionType.error, \"Session timeout\", false);\r\n        store.dispatch(onLogout());\r\n      }, LOGOUT_TIMEOUT);\r\n      const lastActivityTimeout = setTimeout(() => {\r\n        store.dispatch(updateActivityModal(true));\r\n      }, ACTIVITY_TIMEOUT);\r\n      store.dispatch(updateLogoutTimeout(logoutTimeout));\r\n      store.dispatch(updateActivityTimeout(lastActivityTimeout));\r\n    }\r\n    return res.data;\r\n  };\r\n\r\n  public static delete = async (path: string) => {\r\n    const url = path.includes(\"http\") ? path : API_BASE_URL + path;\r\n    const res = await axios.delete(url);\r\n    if (res.data && res.data.error) {\r\n      const result = shouldLogout(res.data.error);\r\n      if (result) {\r\n        createNotification(IActionType.error, res.data.error, false);\r\n        store.dispatch(onLogout());\r\n      }\r\n    } else {\r\n      const logoutTimeout = setTimeout(() => {\r\n        createNotification(IActionType.error, \"Session timeout\", false);\r\n        store.dispatch(onLogout());\r\n      }, LOGOUT_TIMEOUT);\r\n      const lastActivityTimeout = setTimeout(() => {\r\n        store.dispatch(updateActivityModal(true));\r\n      }, ACTIVITY_TIMEOUT);\r\n      store.dispatch(updateLogoutTimeout(logoutTimeout));\r\n      store.dispatch(updateActivityTimeout(lastActivityTimeout));\r\n    }\r\n    return res.data;\r\n  };\r\n\r\n  public static upload = async (\r\n    body: FormData,\r\n    onProgress?: (p: any) => void\r\n  ) => {\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    const res = await axios.post(UPLOAD_URL, body, {\r\n      ...config,\r\n      onUploadProgress: onProgress,\r\n    });\r\n\r\n    if (res.data && res.data.error) {\r\n      const result = shouldLogout(res.data.error);\r\n      if (result) {\r\n        createNotification(IActionType.error, res.data.error, false);\r\n        store.dispatch(onLogout());\r\n      }\r\n    } else {\r\n      if (res.data.status === false) {\r\n        const result = shouldLogout(res.data.message);\r\n        if (result) {\r\n          createNotification(IActionType.error, res.data.message, false);\r\n          store.dispatch(onLogout());\r\n        }\r\n      } else {\r\n        const logoutTimeout = setTimeout(() => {\r\n          createNotification(IActionType.error, \"Session timeout\", false);\r\n          store.dispatch(onLogout());\r\n        }, LOGOUT_TIMEOUT);\r\n        const lastActivityTimeout = setTimeout(() => {\r\n          store.dispatch(updateActivityModal(true));\r\n        }, ACTIVITY_TIMEOUT);\r\n        store.dispatch(updateLogoutTimeout(logoutTimeout));\r\n        store.dispatch(updateActivityTimeout(lastActivityTimeout));\r\n      }\r\n    }\r\n    return res.data;\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}