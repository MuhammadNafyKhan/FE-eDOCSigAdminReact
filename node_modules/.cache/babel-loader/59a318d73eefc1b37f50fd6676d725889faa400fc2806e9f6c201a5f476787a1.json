{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/add-doc/AddSigningDoc.tsx\",\n  _s = $RefreshSig$();\nimport CustomDropZone from \"../../components/input/DropZone\";\nimport React, { useState } from \"react\";\nimport AddDocModal from \"./AddDocModal\";\nimport TemplatesModal from \"./TemplatesModal\";\nimport { FieldArray } from \"formik\";\nimport { TextField } from \"../input/field/TextField\";\nimport { ApiService } from \"../../services/apiService\";\nimport PendingDocModal from \"./PendingDocModal\";\nimport PDF from \"../pdf\";\nimport { getElementType } from \"../../helpers/adapters\";\nimport { hex32Toa } from \"../../helpers/hex32toa\";\nimport { identifyPDF } from \"../../helpers/formIdentify\";\nimport { loadPDF } from \"../../helpers/loadDoc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSigningDoc = _ref => {\n  _s();\n  let {\n    name,\n    values,\n    touched,\n    errors,\n    session,\n    controlid,\n    host,\n    comparingTemps,\n    setFieldTouched,\n    setFieldValue,\n    resetIndex,\n    deletePDFSettings,\n    updatePDFSettings,\n    setElements\n  } = _ref;\n  const [showTemplateModal, setShowTemplateModal] = useState(false);\n  const [loadingTempDetails, setLoadingTempDetails] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [showPedingDoc, setShowPendingDoc] = useState(false);\n  const [tempData, setTempData] = useState({\n    index: -1,\n    url: \"\",\n    elements: [],\n    tempId: \"\"\n  });\n  const [showFilters, setShowFilters] = useState(false);\n  const toggleTemplateModal = function () {\n    let filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (!showTemplateModal) {\n      setShowFilters(!!filter);\n    } else {\n      setShowFilters(true);\n    }\n    setShowTemplateModal(!showTemplateModal);\n    if (filter === true) {\n      setSelectedFile(\"\");\n    }\n  };\n  const toggleTemplateModalCb = () => {\n    toggleTemplateModal(false);\n  };\n  const handleApplyTempToggale = function () {\n    let file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    toggleTemplateModal();\n    setSelectedFile(file);\n  };\n  const applyTemplate = file => {\n    setSelectedFile(file);\n    setShowTemplateModal(true);\n    setShowFilters(true);\n  };\n  const tooglePendingDoc = () => {\n    setShowPendingDoc(!showPedingDoc);\n  };\n  const setFieldValueCustom = (field, value, shouldValidate) => {\n    setFieldValue(field, value, shouldValidate);\n    if (field === name) {\n      // const filename = value[0].uniqnm;\n      const filename = value.slice(-1)[0].uniqnm;\n      setSelectedFile(filename);\n      identifyPDF(filename, comparingTemps, toggleTemplateModalCb);\n      loadPDF(filename, values[name].length);\n    }\n  };\n  const onChoose = async temp => {\n    try {\n      if (temp) {\n        setLoadingTempDetails(true);\n        const body = {\n          session: session,\n          host: host,\n          cont: controlid,\n          action: \"EDIT\",\n          docid: temp.id\n        };\n        const res = await ApiService.post(\"/TEMPLATES/\", body);\n        const {\n          form,\n          graphic: uniqnm,\n          ...rest\n        } = res;\n        const object = {\n          form,\n          display_name: form,\n          uniqnm,\n          is_template: true,\n          template_applied: false,\n          tempId: temp.id,\n          ...rest\n        };\n        if (!values[\"current_package_name\"]) {\n          const date = new Date();\n          const str = date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n          setFieldValue(\"current_package_name\", temp.name + \" \" + str, false);\n        }\n        let selectedIndex = values[name].length;\n        if (selectedFile) {\n          const clone = [...values[name]];\n          const index = clone.findIndex(f => f.uniqnm === selectedFile);\n          selectedIndex = index;\n          if (index > -1) {\n            object.uniqnm = selectedFile;\n            object.template_applied = true;\n            const newObject = {\n              ...object,\n              ...clone[index]\n            };\n            clone[index] = newObject;\n            setFieldValue(name, clone);\n          }\n        } else {\n          setTimeout(() => {\n            setFieldValue(name, [...values[name], object]);\n          }, 0);\n        }\n        setFieldTouched(name, true);\n        setTempData({\n          url: object.uniqnm,\n          index: selectedIndex,\n          elements: object.sigboxes,\n          tempId: object.temId\n        });\n      }\n      setSelectedFile(\"\");\n    } catch (e) {\n      setSelectedFile(\"\");\n      setLoadingTempDetails(false);\n    }\n  };\n  const onChoosePendingDoc = (entry, applyTemplate) => {\n    if (entry.length > 0) {\n      setFieldValue(name, [...values[name], ...entry]);\n      setFieldTouched(name, true);\n      if (!values[\"current_package_name\"]) {\n        const date = new Date();\n        const str = date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\n        setTimeout(() => {\n          setFieldValue(\"current_package_name\", entry[0].display_name + \" \" + str, true);\n          console.log(values);\n        }, 1000);\n      }\n    }\n  };\n  const percToDecimal = (val, total) => {\n    let num;\n    if (typeof val === \"string\") {\n      num = parseFloat(val);\n    } else {\n      num = val;\n    }\n    return num / 100 * total;\n  };\n  const updateDocSettings = (width, height, total) => {\n    updatePDFSettings({\n      maxx: width,\n      maxy: height,\n      total,\n      index: tempData.index\n    });\n    const elements = [];\n    tempData.elements.forEach(t => {\n      const {\n        width: eWidth,\n        height: eHeight,\n        top,\n        left,\n        esigntype,\n        boxid,\n        pagenumber,\n        // font,\n        // fontsize,\n        // lineheight,\n        fieldname,\n        // fieldvalue,\n        //   defaultvalue,\n        //  fieldlabel,\n        //  fieldrequired,\n        //  depfield,\n        //  depfieldvalue,\n        //  depoperator,\n        //  checked,\n        //  uncheckedvalue,\n        checkedvalue,\n        signsetid\n      } = t;\n      const y = parseFloat(pagenumber) * height + percToDecimal(top, height);\n      const type = getElementType(esigntype);\n      let options = [];\n      const str = hex32Toa(checkedvalue);\n      if (esigntype === \"10\") {\n        const arr = JSON.parse(str);\n        options = arr.map ? arr.map(a => {\n          const [label = \"\", value = \"\"] = a;\n          return {\n            label,\n            value\n          };\n        }) : [];\n      }\n      const element = {\n        width: percToDecimal(eWidth, width),\n        height: percToDecimal(eHeight, height),\n        x: percToDecimal(left, width),\n        y,\n        id: boxid,\n        name: fieldname ? fieldname : type,\n        options,\n        signer: signsetid + tempData.tempId,\n        type\n      };\n      elements.push(element);\n    });\n    setElements({\n      index: tempData.index,\n      element: elements,\n      total: elements.length,\n      showNotification: false\n    });\n    toggleTemplateModal();\n    setLoadingTempDetails(false);\n    setTempData({\n      index: -1,\n      url: \"\",\n      elements: [],\n      tempId: \"\"\n    });\n  };\n  const updatePendingDocSettings = (maxx, maxy, index, total, rawEls, tempId) => {\n    updatePDFSettings({\n      maxx,\n      maxy,\n      total,\n      index\n    });\n    const elements = [];\n    rawEls.forEach(t => {\n      const {\n        width: eWidth,\n        height: eHeight,\n        top,\n        left,\n        esigntype,\n        boxid,\n        pagenumber,\n        // font,\n        // fontsize,\n        // lineheight,\n        fieldname,\n        // fieldvalue,\n        //   defaultvalue,\n        //  fieldlabel,\n        //  fieldrequired,\n        //  depfield,\n        //  depfieldvalue,\n        //  depoperator,\n        //  checked,\n        //  uncheckedvalue,\n        checkedvalue,\n        signsetid\n      } = t;\n      const y = parseFloat(pagenumber) * maxx + percToDecimal(top, maxy);\n      const type = getElementType(esigntype);\n      let options = [];\n      const str = hex32Toa(checkedvalue);\n      if (esigntype === \"10\") {\n        const arr = JSON.parse(str);\n        options = arr.map ? arr.map(a => {\n          const [label = \"\", value = \"\"] = a;\n          return {\n            label,\n            value\n          };\n        }) : [];\n      }\n      const element = {\n        width: percToDecimal(eWidth, maxx),\n        height: percToDecimal(eHeight, maxy),\n        x: percToDecimal(left, maxx),\n        y,\n        id: boxid,\n        name: fieldname ? fieldname : type,\n        options,\n        signer: signsetid + tempId,\n        type\n      };\n      elements.push(element);\n    });\n    setElements({\n      index,\n      element: elements,\n      total: elements.length,\n      showNotification: false\n    });\n  };\n  const color = values[name] && values[name].length > 0 ? \"blue py-2\" : \"blue\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomDropZone, {\n      color: color,\n      header_text: \"Document to Sign\",\n      toggleTemplateModal: handleApplyTempToggale,\n      setFieldTouched: setFieldTouched,\n      setFieldValue: setFieldValueCustom,\n      name: name,\n      values: values,\n      modal: /*#__PURE__*/_jsxDEV(AddDocModal, {\n        onClose: () => {},\n        onTemplateClick: toggleTemplateModal,\n        onUploadClick: () => {},\n        onUploadandApplyTemp: () => {},\n        onPendingDocsClick: tooglePendingDoc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this),\n      children: values[name] && values[name].length > 0 ? /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: name,\n        render: arrayHelper => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100\",\n            children: values[name].map((f, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex px-2 mt-1 align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-file FAFileIcon color_blue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-fill ps-3\",\n                  children: f.form ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-6\",\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        name: `${name}.${index}.display_name`,\n                        label: \"\",\n                        labelClassName: \"d-none\",\n                        placeholder: \"Enter filename\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-6\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-muted\",\n                        children: [\"(\", f.form, \")\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 428,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n                    name: `${name}.${index}.display_name`,\n                    label: \"\",\n                    labelClassName: \"d-none\",\n                    placeholder: \"Enter filename\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [!f.is_template && /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      applyTemplate(f.uniqnm);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-file-invoice FAStandardIcon mx-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      arrayHelper.remove(index);\n                      deletePDFSettings({\n                        index\n                      });\n                      resetIndex();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-trash-alt FAStandardIcon mx-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 25\n                }, this)]\n              }, f.uniqnm, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dropzone_content\",\n        children: [\"drag and drop, click \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"upload_button\",\n          children: \"browse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 34\n        }, this), \" \", \"or click add icon to select a decument or template for signin (.pdf, .doc, .png, .jpg, .tff)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), touched[name] && errors[name] && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\",\n            fontSize: \"10px\"\n          },\n          children: errors[name]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), showTemplateModal && /*#__PURE__*/_jsxDEV(TemplatesModal, {\n      onClose: toggleTemplateModal,\n      onChoose: onChoose,\n      loadingDetails: loadingTempDetails,\n      showFilter: showFilters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 9\n    }, this), showPedingDoc && /*#__PURE__*/_jsxDEV(PendingDocModal, {\n      onClose: tooglePendingDoc,\n      onChoosePendingDoc: onChoosePendingDoc,\n      updatePendingDocSettings: updatePendingDocSettings,\n      comparingTemps: comparingTemps,\n      total: values[name] ? values[name].length : 0,\n      loader: false,\n      type: \"signing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }, this), tempData.index > -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-none\",\n      children: /*#__PURE__*/_jsxDEV(PDF, {\n        file: tempData.url,\n        updatePDFSettings: updateDocSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSigningDoc, \"WtZ0khHwN7/rR2BQ1DIDtEm01q0=\");\n_c = AddSigningDoc;\nexport default AddSigningDoc;\nvar _c;\n$RefreshReg$(_c, \"AddSigningDoc\");","map":{"version":3,"names":["CustomDropZone","React","useState","AddDocModal","TemplatesModal","FieldArray","TextField","ApiService","PendingDocModal","PDF","getElementType","hex32Toa","identifyPDF","loadPDF","jsxDEV","_jsxDEV","AddSigningDoc","_ref","_s","name","values","touched","errors","session","controlid","host","comparingTemps","setFieldTouched","setFieldValue","resetIndex","deletePDFSettings","updatePDFSettings","setElements","showTemplateModal","setShowTemplateModal","loadingTempDetails","setLoadingTempDetails","selectedFile","setSelectedFile","showPedingDoc","setShowPendingDoc","tempData","setTempData","index","url","elements","tempId","showFilters","setShowFilters","toggleTemplateModal","filter","arguments","length","undefined","toggleTemplateModalCb","handleApplyTempToggale","file","applyTemplate","tooglePendingDoc","setFieldValueCustom","field","value","shouldValidate","filename","slice","uniqnm","onChoose","temp","body","cont","action","docid","id","res","post","form","graphic","rest","object","display_name","is_template","template_applied","date","Date","str","getMonth","getDate","getFullYear","selectedIndex","clone","findIndex","f","newObject","setTimeout","sigboxes","temId","e","onChoosePendingDoc","entry","console","log","percToDecimal","val","total","num","parseFloat","updateDocSettings","width","height","maxx","maxy","forEach","t","eWidth","eHeight","top","left","esigntype","boxid","pagenumber","fieldname","checkedvalue","signsetid","y","type","options","arr","JSON","parse","map","a","label","element","x","signer","push","showNotification","updatePendingDocSettings","rawEls","color","children","header_text","modal","onClose","onTemplateClick","onUploadClick","onUploadandApplyTemp","onPendingDocsClick","fileName","_jsxFileName","lineNumber","columnNumber","render","arrayHelper","className","labelClassName","placeholder","onClick","remove","style","fontSize","loadingDetails","showFilter","loader","_c","$RefreshReg$"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/add-doc/AddSigningDoc.tsx"],"sourcesContent":["import CustomDropZone from \"../../components/input/DropZone\";\r\nimport React, { useState } from \"react\";\r\nimport AddDocModal from \"./AddDocModal\";\r\nimport TemplatesModal from \"./TemplatesModal\";\r\nimport { FieldArray } from \"formik\";\r\nimport { TextField } from \"../input/field/TextField\";\r\nimport {\r\n  IApiSigboxTemplate,\r\n  IApiTemplate,\r\n  IComparingTemp,\r\n  IElement,\r\n  IOptions,\r\n} from \"../../interface\";\r\nimport { ApiService } from \"../../services/apiService\";\r\nimport PendingDocModal from \"./PendingDocModal\";\r\nimport PDF from \"../pdf\";\r\nimport { getElementType } from \"../../helpers/adapters\";\r\nimport { hex32Toa } from \"../../helpers/hex32toa\";\r\nimport { identifyPDF } from \"../../helpers/formIdentify\";\r\nimport { loadPDF } from \"../../helpers/loadDoc\";\r\n\r\ninterface IProps {\r\n  inputProps?: {};\r\n  name: string;\r\n  values: any;\r\n  errors: any;\r\n  touched: any;\r\n  host: string;\r\n  session: string;\r\n  controlid: string;\r\n  comparingTemps: IComparingTemp[];\r\n  setFieldValue(\r\n    field: string,\r\n    value: any,\r\n    shouldValidate?: boolean | undefined\r\n  ): void;\r\n  setFieldTouched(\r\n    field: string,\r\n    isTouched?: boolean | undefined,\r\n    shouldValidate?: boolean | undefined\r\n  ): void;\r\n  updatePDFSettings(payload?: any): void;\r\n  deletePDFSettings(payload?: any): void;\r\n  setElements(payload?: any): void;\r\n  resetIndex(): void;\r\n}\r\n\r\nconst AddSigningDoc: React.FC<IProps> = ({\r\n  name,\r\n  values,\r\n  touched,\r\n  errors,\r\n  session,\r\n  controlid,\r\n  host,\r\n  comparingTemps,\r\n  setFieldTouched,\r\n  setFieldValue,\r\n  resetIndex,\r\n  deletePDFSettings,\r\n  updatePDFSettings,\r\n  setElements,\r\n}) => {\r\n  const [showTemplateModal, setShowTemplateModal] = useState(false);\r\n  const [loadingTempDetails, setLoadingTempDetails] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [showPedingDoc, setShowPendingDoc] = useState(false);\r\n  const [tempData, setTempData] = useState({\r\n    index: -1,\r\n    url: \"\",\r\n    elements: [],\r\n    tempId: \"\",\r\n  });\r\n\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  const toggleTemplateModal = (filter = true) => {\r\n    if (!showTemplateModal) {\r\n      setShowFilters(!!filter);\r\n    } else {\r\n      setShowFilters(true);\r\n    }\r\n    setShowTemplateModal(!showTemplateModal);\r\n    if (filter === true) {\r\n      setSelectedFile(\"\");\r\n    }\r\n  };\r\n\r\n  const toggleTemplateModalCb = () => {\r\n    toggleTemplateModal(false);\r\n  };\r\n\r\n  const handleApplyTempToggale = (file: string = \"\") => {\r\n    toggleTemplateModal();\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const applyTemplate = (file: string) => {\r\n    setSelectedFile(file);\r\n    setShowTemplateModal(true);\r\n    setShowFilters(true);\r\n  };\r\n\r\n  const tooglePendingDoc = () => {\r\n    setShowPendingDoc(!showPedingDoc);\r\n  };\r\n\r\n  const setFieldValueCustom = (\r\n    field: string,\r\n    value: any,\r\n    shouldValidate?: boolean | undefined\r\n  ) => {\r\n    setFieldValue(field, value, shouldValidate);\r\n    if (field === name) {\r\n      // const filename = value[0].uniqnm;\r\n      const filename = value.slice(-1)[0].uniqnm;\r\n      setSelectedFile(filename);\r\n      identifyPDF(filename, comparingTemps, toggleTemplateModalCb);\r\n      loadPDF(filename, values[name].length);\r\n    }\r\n  };\r\n  const onChoose = async (temp?: IApiTemplate) => {\r\n    try {\r\n      if (temp) {\r\n        setLoadingTempDetails(true);\r\n        const body = {\r\n          session: session,\r\n          host: host,\r\n          cont: controlid,\r\n          action: \"EDIT\",\r\n          docid: temp.id,\r\n        };\r\n\r\n        const res = await ApiService.post(\"/TEMPLATES/\", body);\r\n        const { form, graphic: uniqnm, ...rest } = res;\r\n        const object = {\r\n          form,\r\n          display_name: form,\r\n          uniqnm,\r\n          is_template: true,\r\n          template_applied: false,\r\n          tempId: temp.id,\r\n          ...rest,\r\n        };\r\n        if (!values[\"current_package_name\"]) {\r\n          const date = new Date();\r\n          const str =\r\n            date.getMonth() +\r\n            1 +\r\n            \"-\" +\r\n            date.getDate() +\r\n            \"-\" +\r\n            date.getFullYear();\r\n          setFieldValue(\"current_package_name\", temp.name + \" \" + str, false);\r\n        }\r\n\r\n        let selectedIndex = values[name].length;\r\n        if (selectedFile) {\r\n          const clone = [...values[name]];\r\n          const index = clone.findIndex((f) => f.uniqnm === selectedFile);\r\n          selectedIndex = index;\r\n          if (index > -1) {\r\n            object.uniqnm = selectedFile;\r\n            object.template_applied = true;\r\n            const newObject = { ...object, ...clone[index] };\r\n            clone[index] = newObject;\r\n            setFieldValue(name, clone);\r\n          }\r\n        } else {\r\n          setTimeout(() => {\r\n            setFieldValue(name, [...values[name], object]);\r\n          }, 0);\r\n        }\r\n\r\n        setFieldTouched(name, true);\r\n\r\n        setTempData({\r\n          url: object.uniqnm,\r\n          index: selectedIndex,\r\n          elements: object.sigboxes,\r\n          tempId: object.temId,\r\n        });\r\n      }\r\n      setSelectedFile(\"\");\r\n    } catch (e) {\r\n      setSelectedFile(\"\");\r\n      setLoadingTempDetails(false);\r\n    }\r\n  };\r\n\r\n  const onChoosePendingDoc = (entry: any[], applyTemplate: boolean) => {\r\n    if (entry.length > 0) {\r\n      setFieldValue(name, [...values[name], ...entry]);\r\n\r\n      setFieldTouched(name, true);\r\n      if (!values[\"current_package_name\"]) {\r\n        const date = new Date();\r\n        const str =\r\n          date.getMonth() + 1 + \"-\" + date.getDate() + \"-\" + date.getFullYear();\r\n        setTimeout(() => {\r\n          setFieldValue(\r\n            \"current_package_name\",\r\n            entry[0].display_name + \" \" + str,\r\n            true\r\n          );\r\n          console.log(values);\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const percToDecimal = (val: string | number, total: number) => {\r\n    let num: number;\r\n    if (typeof val === \"string\") {\r\n      num = parseFloat(val);\r\n    } else {\r\n      num = val;\r\n    }\r\n\r\n    return (num / 100) * total;\r\n  };\r\n\r\n  const updateDocSettings = (width: number, height: number, total: number) => {\r\n    updatePDFSettings({\r\n      maxx: width,\r\n      maxy: height,\r\n      total,\r\n      index: tempData.index,\r\n    });\r\n    const elements: IElement[] = [];\r\n    tempData.elements.forEach((t: IApiSigboxTemplate) => {\r\n      const {\r\n        width: eWidth,\r\n        height: eHeight,\r\n        top,\r\n        left,\r\n        esigntype,\r\n        boxid,\r\n        pagenumber,\r\n        // font,\r\n        // fontsize,\r\n        // lineheight,\r\n        fieldname,\r\n        // fieldvalue,\r\n        //   defaultvalue,\r\n        //  fieldlabel,\r\n        //  fieldrequired,\r\n        //  depfield,\r\n        //  depfieldvalue,\r\n        //  depoperator,\r\n        //  checked,\r\n        //  uncheckedvalue,\r\n        checkedvalue,\r\n        signsetid,\r\n      } = t;\r\n\r\n      const y = parseFloat(pagenumber) * height + percToDecimal(top, height);\r\n      const type = getElementType(esigntype);\r\n\r\n      let options: IOptions[] = [];\r\n      const str = hex32Toa(checkedvalue);\r\n      if (esigntype === \"10\") {\r\n        const arr = JSON.parse(str);\r\n        options = arr.map\r\n          ? arr.map((a: any) => {\r\n              const [label = \"\", value = \"\"] = a;\r\n              return {\r\n                label,\r\n                value,\r\n              };\r\n            })\r\n          : [];\r\n      }\r\n\r\n      const element: IElement = {\r\n        width: percToDecimal(eWidth, width),\r\n        height: percToDecimal(eHeight, height),\r\n        x: percToDecimal(left, width),\r\n        y,\r\n        id: boxid,\r\n        name: fieldname ? fieldname : type,\r\n        options,\r\n        signer: signsetid + tempData.tempId,\r\n        type,\r\n      };\r\n      elements.push(element);\r\n    });\r\n    setElements({\r\n      index: tempData.index,\r\n      element: elements,\r\n      total: elements.length,\r\n      showNotification: false,\r\n    });\r\n    toggleTemplateModal();\r\n    setLoadingTempDetails(false);\r\n    setTempData({ index: -1, url: \"\", elements: [], tempId: \"\" });\r\n  };\r\n\r\n  const updatePendingDocSettings = (\r\n    maxx: number,\r\n    maxy: number,\r\n    index: number,\r\n    total: number,\r\n    rawEls: IApiSigboxTemplate[],\r\n    tempId: string\r\n  ) => {\r\n    updatePDFSettings({\r\n      maxx,\r\n      maxy,\r\n      total,\r\n      index,\r\n    });\r\n    const elements: IElement[] = [];\r\n    rawEls.forEach((t: IApiSigboxTemplate) => {\r\n      const {\r\n        width: eWidth,\r\n        height: eHeight,\r\n        top,\r\n        left,\r\n        esigntype,\r\n        boxid,\r\n        pagenumber,\r\n        // font,\r\n        // fontsize,\r\n        // lineheight,\r\n        fieldname,\r\n        // fieldvalue,\r\n        //   defaultvalue,\r\n        //  fieldlabel,\r\n        //  fieldrequired,\r\n        //  depfield,\r\n        //  depfieldvalue,\r\n        //  depoperator,\r\n        //  checked,\r\n        //  uncheckedvalue,\r\n        checkedvalue,\r\n        signsetid,\r\n      } = t;\r\n\r\n      const y = parseFloat(pagenumber) * maxx + percToDecimal(top, maxy);\r\n      const type = getElementType(esigntype);\r\n\r\n      let options: IOptions[] = [];\r\n      const str = hex32Toa(checkedvalue);\r\n      if (esigntype === \"10\") {\r\n        const arr = JSON.parse(str);\r\n        options = arr.map\r\n          ? arr.map((a: any) => {\r\n              const [label = \"\", value = \"\"] = a;\r\n              return {\r\n                label,\r\n                value,\r\n              };\r\n            })\r\n          : [];\r\n      }\r\n\r\n      const element: IElement = {\r\n        width: percToDecimal(eWidth, maxx),\r\n        height: percToDecimal(eHeight, maxy),\r\n        x: percToDecimal(left, maxx),\r\n        y,\r\n        id: boxid,\r\n        name: fieldname ? fieldname : type,\r\n        options,\r\n        signer: signsetid + tempId,\r\n        type,\r\n      };\r\n      elements.push(element);\r\n    });\r\n    setElements({\r\n      index,\r\n      element: elements,\r\n      total: elements.length,\r\n      showNotification: false,\r\n    });\r\n  };\r\n\r\n  const color = values[name] && values[name].length > 0 ? \"blue py-2\" : \"blue\";\r\n\r\n  return (\r\n    <div>\r\n      <CustomDropZone\r\n        color={color}\r\n        header_text=\"Document to Sign\"\r\n        toggleTemplateModal={handleApplyTempToggale}\r\n        setFieldTouched={setFieldTouched}\r\n        setFieldValue={setFieldValueCustom}\r\n        name={name}\r\n        values={values}\r\n        modal={\r\n          <AddDocModal\r\n            onClose={() => {}}\r\n            onTemplateClick={toggleTemplateModal}\r\n            onUploadClick={() => {}}\r\n            onUploadandApplyTemp={() => {}}\r\n            onPendingDocsClick={tooglePendingDoc}\r\n          />\r\n        }\r\n      >\r\n        {values[name] && values[name].length > 0 ? (\r\n          <FieldArray\r\n            name={name}\r\n            render={(arrayHelper) => {\r\n              return (\r\n                <div className=\"w-100\">\r\n                  {values[name].map((f: any, index: number) => {\r\n                    return (\r\n                      <div\r\n                        key={f.uniqnm}\r\n                        className=\"d-flex px-2 mt-1 align-items-center\"\r\n                      >\r\n                        <div>\r\n                          <i className=\"fas fa-file FAFileIcon color_blue\" />\r\n                        </div>\r\n                        <div className=\"flex-fill ps-3\">\r\n                          {f.form ? (\r\n                            <div className=\"row align-items-center\">\r\n                              <div className=\"col-6\">\r\n                                <TextField\r\n                                  name={`${name}.${index}.display_name`}\r\n                                  label=\"\"\r\n                                  labelClassName=\"d-none\"\r\n                                  placeholder=\"Enter filename\"\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-6\">\r\n                                <span className=\"text-muted\">({f.form})</span>\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <TextField\r\n                              name={`${name}.${index}.display_name`}\r\n                              label=\"\"\r\n                              labelClassName=\"d-none\"\r\n                              placeholder=\"Enter filename\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n\r\n                        <div>\r\n                          {!f.is_template && (\r\n                            <span\r\n                              onClick={() => {\r\n                                applyTemplate(f.uniqnm);\r\n                              }}\r\n                            >\r\n                              <i className=\"fa fa-file-invoice FAStandardIcon mx-1\" />\r\n                            </span>\r\n                          )}\r\n                          <span\r\n                            onClick={() => {\r\n                              arrayHelper.remove(index);\r\n                              deletePDFSettings({ index });\r\n                              resetIndex();\r\n                            }}\r\n                          >\r\n                            <i className=\"fa fa-trash-alt FAStandardIcon mx-1\" />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n        ) : (\r\n          <p className=\"dropzone_content\">\r\n            drag and drop, click <span className=\"upload_button\">browse</span>{\" \"}\r\n            or click add icon to select a decument or template for signin (.pdf,\r\n            .doc, .png, .jpg, .tff)\r\n            <br />\r\n            {touched[name] && errors[name] && (\r\n              <span style={{ color: \"red\", fontSize: \"10px\" }}>\r\n                {errors[name]}\r\n              </span>\r\n            )}\r\n          </p>\r\n        )}\r\n      </CustomDropZone>\r\n      {showTemplateModal && (\r\n        <TemplatesModal\r\n          onClose={toggleTemplateModal}\r\n          onChoose={onChoose}\r\n          loadingDetails={loadingTempDetails}\r\n          showFilter={showFilters}\r\n        />\r\n      )}\r\n      {showPedingDoc && (\r\n        <PendingDocModal\r\n          onClose={tooglePendingDoc}\r\n          onChoosePendingDoc={onChoosePendingDoc}\r\n          updatePendingDocSettings={updatePendingDocSettings}\r\n          comparingTemps={comparingTemps}\r\n          total={values[name] ? values[name].length : 0}\r\n          loader={false}\r\n          type=\"signing\"\r\n        />\r\n      )}\r\n      {tempData.index > -1 && (\r\n        <div className=\"d-none\">\r\n          <PDF file={tempData.url} updatePDFSettings={updateDocSettings} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default AddSigningDoc;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}