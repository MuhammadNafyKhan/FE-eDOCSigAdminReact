{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/pages/ManagePackage/List.tsx\";\nimport { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { colors } from \"../../constants\";\nimport DraggableListItem from \"./Draggablelistitem\";\nimport { reorder } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grid = 8;\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: \"none\",\n  margin: `0 0 ${grid}px 0`,\n  // change background colour if dragging\n  //   background: isDragging ? \"lightgreen\" : \"grey\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\nconst getListStyle = isDraggingOver => ({\n  //   background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  width: \"100%\"\n});\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: props.items.map((p, i) => {\n        p.color = colors[i % 4];\n        return p;\n      })\n    };\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const items = reorder(this.state.items, result.source.index, result.destination.index);\n    this.setState({\n      items\n    });\n  }\n\n  // Normally you would want to split things out into separate components.\n  // But in this example everything is just done in one place for simplicity\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"droppable\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          style: getListStyle(snapshot.isDraggingOver),\n          children: [this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: item.key.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n              children: /*#__PURE__*/_jsxDEV(DraggableListItem, {\n                item: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default List;","map":{"version":3,"names":["Component","DragDropContext","Droppable","Draggable","colors","DraggableListItem","reorder","jsxDEV","_jsxDEV","grid","getItemStyle","isDragging","draggableStyle","userSelect","margin","getListStyle","isDraggingOver","width","List","constructor","props","state","items","map","p","i","color","onDragEnd","bind","result","destination","source","index","setState","render","children","droppableId","provided","snapshot","droppableProps","ref","innerRef","style","item","draggableId","key","toString","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","placeholder"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/pages/ManagePackage/List.tsx"],"sourcesContent":["import { Component } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { colors } from \"../../constants\";\r\nimport { IParticipants } from \"../../interface\";\r\nimport DraggableListItem from \"./Draggablelistitem\";\r\nimport { reorder } from \"./helpers\";\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  //   background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n});\r\n\r\nconst getListStyle = (isDraggingOver: boolean) => ({\r\n  //   background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  width: \"100%\",\r\n});\r\n\r\ninterface IState {\r\n  items: IParticipants[];\r\n}\r\ninterface IProps {\r\n  items: IParticipants[];\r\n}\r\n\r\nclass List extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.items.map((p, i) => {\r\n        p.color = colors[i % 4];\r\n        return p;\r\n      }),\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  onDragEnd(result: any) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items,\r\n    });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {this.state.items.map((item: IParticipants, index: number) => (\r\n                <Draggable\r\n                  key={item.key}\r\n                  draggableId={item.key.toString()}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <DraggableListItem item={item} />\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}