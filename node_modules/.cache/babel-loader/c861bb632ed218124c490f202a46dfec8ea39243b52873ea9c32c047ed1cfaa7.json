{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/general/PDFRightBar.tsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const Pages: React.FC<{\n//   total: number;\n//   width: number;\n//   currentPage?: number;\n// }> = ({ total, width, currentPage }) => {\n//   console.log(currentPage);\n//   return (\n//     <div id=\"page_right_bar\">\n//       {Array.from({ length: total }).map((v, i) => {\n//         return (\n//           <a href={`#pdf_page_${i}`} key={i} className=\"page_link\">\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 flexDirection: \"column\",\n//                 alignItems: \"center\",\n//                 padding: \"4px 16px\",\n//               }}\n//             >\n//               <div\n//                 style={{\n//                   border:\n//                     currentPage === i + 1\n//                       ? \"3px solid yellow\"\n//                       : \"1px solid gray\",\n//                   textAlign: \"center\",\n//                 }}\n//               >\n//                 <Page\n//                   pageNumber={i + 1}\n//                   width={width / 2}\n//                   renderAnnotationLayer={false}\n//                   renderTextLayer={false}\n//                   renderInteractiveForms={false}\n//                 />\n//               </div>\n//               <span>{i + 1}</span>\n//             </div>\n//           </a>\n//         );\n//       })}\n//     </div>\n//   );\n// };\n\nconst CustomPDF = _ref => {\n  let {\n    file,\n    currentPage,\n    pdf_images,\n    current_doc\n  } = _ref;\n  const curr = pdf_images[current_doc];\n  if (!curr) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page_right_bar\",\n    children: pdf_images[current_doc] && pdf_images[current_doc].map((img, i) => {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `#pdf_page_${i}`,\n        className: \"page_link\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            padding: \"4px 16px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: currentPage === i + 1 ? \"3px solid yellow\" : \"1px solid gray\",\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.image,\n              width: 120,\n              height: 160\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomPDF;\nconst mapStateToProps = store => {\n  const {\n    settings,\n    file\n  } = store;\n  const {\n    pdf_images\n  } = file;\n  const {\n    current_doc\n  } = settings;\n  return {\n    pdf_images,\n    current_doc\n  };\n};\nexport default connect(mapStateToProps)(CustomPDF);\nvar _c;\n$RefreshReg$(_c, \"CustomPDF\");","map":{"version":3,"names":["React","connect","jsxDEV","_jsxDEV","CustomPDF","_ref","file","currentPage","pdf_images","current_doc","curr","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","img","i","href","className","style","display","flexDirection","alignItems","padding","border","textAlign","src","image","width","height","_c","mapStateToProps","store","settings","$RefreshReg$"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/general/PDFRightBar.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IPDFImage } from \"../../interface\";\r\nimport { IStoreState } from \"../../reducers\";\r\n\r\ninterface IProps {\r\n  file: any;\r\n  currentPage?: number;\r\n  pdf_images: IPDFImage[][];\r\n  current_doc: number;\r\n}\r\n\r\n// const Pages: React.FC<{\r\n//   total: number;\r\n//   width: number;\r\n//   currentPage?: number;\r\n// }> = ({ total, width, currentPage }) => {\r\n//   console.log(currentPage);\r\n//   return (\r\n//     <div id=\"page_right_bar\">\r\n//       {Array.from({ length: total }).map((v, i) => {\r\n//         return (\r\n//           <a href={`#pdf_page_${i}`} key={i} className=\"page_link\">\r\n//             <div\r\n//               style={{\r\n//                 display: \"flex\",\r\n//                 flexDirection: \"column\",\r\n//                 alignItems: \"center\",\r\n//                 padding: \"4px 16px\",\r\n//               }}\r\n//             >\r\n//               <div\r\n//                 style={{\r\n//                   border:\r\n//                     currentPage === i + 1\r\n//                       ? \"3px solid yellow\"\r\n//                       : \"1px solid gray\",\r\n//                   textAlign: \"center\",\r\n//                 }}\r\n//               >\r\n//                 <Page\r\n//                   pageNumber={i + 1}\r\n//                   width={width / 2}\r\n//                   renderAnnotationLayer={false}\r\n//                   renderTextLayer={false}\r\n//                   renderInteractiveForms={false}\r\n//                 />\r\n//               </div>\r\n//               <span>{i + 1}</span>\r\n//             </div>\r\n//           </a>\r\n//         );\r\n//       })}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst CustomPDF: React.FC<IProps> = ({\r\n  file,\r\n  currentPage,\r\n  pdf_images,\r\n  current_doc,\r\n}) => {\r\n  const curr = pdf_images[current_doc];\r\n  if (!curr) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div id=\"page_right_bar\">\r\n      {pdf_images[current_doc] &&\r\n        pdf_images[current_doc].map((img, i) => {\r\n          return (\r\n            <a href={`#pdf_page_${i}`} key={i} className=\"page_link\">\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  padding: \"4px 16px\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    border:\r\n                      currentPage === i + 1\r\n                        ? \"3px solid yellow\"\r\n                        : \"1px solid gray\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  <img key={i} src={img.image} width={120} height={160} />\r\n                </div>\r\n                <span>{i + 1}</span>\r\n              </div>\r\n            </a>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (store: IStoreState) => {\r\n  const { settings, file } = store;\r\n  const { pdf_images } = file;\r\n  const { current_doc } = settings;\r\n  return {\r\n    pdf_images,\r\n    current_doc,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomPDF);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAA2B,GAAGC,IAAA,IAK9B;EAAA,IAL+B;IACnCC,IAAI;IACJC,WAAW;IACXC,UAAU;IACVC;EACF,CAAC,GAAAJ,IAAA;EACC,MAAMK,IAAI,GAAGF,UAAU,CAACC,WAAW,CAAC;EACpC,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOP,OAAA;MAAAQ,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC9B;EACA,oBACEZ,OAAA;IAAKa,EAAE,EAAC,gBAAgB;IAAAL,QAAA,EACrBH,UAAU,CAACC,WAAW,CAAC,IACtBD,UAAU,CAACC,WAAW,CAAC,CAACQ,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MACtC,oBACEhB,OAAA;QAAGiB,IAAI,EAAG,aAAYD,CAAE,EAAE;QAASE,SAAS,EAAC,WAAW;QAAAV,QAAA,eACtDR,OAAA;UACEmB,KAAK,EAAE;YACLC,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvBC,UAAU,EAAE,QAAQ;YACpBC,OAAO,EAAE;UACX,CAAE;UAAAf,QAAA,gBAEFR,OAAA;YACEmB,KAAK,EAAE;cACLK,MAAM,EACJpB,WAAW,KAAKY,CAAC,GAAG,CAAC,GACjB,kBAAkB,GAClB,gBAAgB;cACtBS,SAAS,EAAE;YACb,CAAE;YAAAjB,QAAA,eAEFR,OAAA;cAAa0B,GAAG,EAAEX,GAAG,CAACY,KAAM;cAACC,KAAK,EAAE,GAAI;cAACC,MAAM,EAAE;YAAI,GAA3Cb,CAAC;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAA6C;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACpD,eACNZ,OAAA;YAAAQ,QAAA,EAAOQ,CAAC,GAAG;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAChB,GArBwBI,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAsB7B;IAER,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEV,CAAC;AAACkB,EAAA,GA1CI7B,SAA2B;AA4CjC,MAAM8B,eAAe,GAAIC,KAAkB,IAAK;EAC9C,MAAM;IAAEC,QAAQ;IAAE9B;EAAK,CAAC,GAAG6B,KAAK;EAChC,MAAM;IAAE3B;EAAW,CAAC,GAAGF,IAAI;EAC3B,MAAM;IAAEG;EAAY,CAAC,GAAG2B,QAAQ;EAChC,OAAO;IACL5B,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AAED,eAAeR,OAAO,CAACiC,eAAe,CAAC,CAAC9B,SAAS,CAAC;AAAC,IAAA6B,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}