{"ast":null,"code":"import { all, call, select, fork, put, takeLatest, takeEvery } from \"redux-saga/effects\";\nimport { ADD_FORM, EDIT_FORM, REMOVE_FORM, GET_FORMS, GET_SINGLE_FORMS } from \"../constants/actionTypes\";\nimport { addFormLocal, editFormLocal, setForms, setSingleForm, removeFormLocal, setFormLoader } from \"../actions/form\";\nimport { ApiService } from \"../services/apiService\";\nimport { ip, token, user } from \"../constants/selectors\";\nfunction getFormsSaga(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    try {\n      yield put(setFormLoader({\n        loader: true\n      }));\n      const session = yield select(token);\n      const host = yield select(ip);\n      const userData = yield select(user);\n      const controlid = userData.controlid;\n      const path = `/FORMS/`;\n      const body = {\n        session,\n        host,\n        controlid,\n        action: \"GETFORMSLIST\"\n      };\n      const res = yield call(ApiService.post, path, body);\n      if (res.result) {\n        yield put(setForms(res));\n      } else {\n        yield put(setFormLoader({\n          loader: false\n        }));\n      }\n    } catch (error) {\n      yield put(setFormLoader({\n        loader: false\n      }));\n      console.log(\"error on load user\");\n    }\n  }();\n}\nfunction getSingleFormSaga(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    try {\n      yield put(setFormLoader({\n        loader: true\n      }));\n      const session = yield select(token);\n      const host = yield select(ip);\n      const userData = yield select(user);\n      const controlid = userData.controlid;\n      const path = `/FORMS/`;\n      const body = {\n        action: \"GETFORMDATA\",\n        formname: payload,\n        session,\n        host,\n        controlid\n      };\n      const res = yield call(ApiService.post, path, body);\n      if (res.result) {\n        yield put(setSingleForm(res));\n      } else {\n        yield put(setFormLoader({\n          loader: false\n        }));\n      }\n    } catch (error) {\n      yield put(setFormLoader({\n        loader: false\n      }));\n      console.log(\"error on load user\");\n    }\n  }();\n}\nfunction editFormSaga(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    try {\n      yield put(setFormLoader({\n        loader: true\n      }));\n      const path = ``;\n      const body = {\n        ...payload\n      };\n      const index = body.index;\n      delete body.index;\n      const res = yield call(ApiService.patch, path, body);\n      if (res.result) {\n        yield put(editFormLocal({\n          index,\n          value: res\n        }));\n      } else {\n        yield put(setFormLoader({\n          loader: false\n        }));\n      }\n    } catch (error) {\n      yield put(setFormLoader({\n        loader: false\n      }));\n      console.log(\"error on load user\");\n    }\n  }();\n}\nfunction removeFormSaga(_ref4) {\n  let {\n    payload\n  } = _ref4;\n  return function* () {\n    try {\n      yield put(setFormLoader({\n        loader: true\n      }));\n      const index = payload.index;\n      const userData = yield select(user);\n      const path = `user/${userData}`;\n      const res = yield call(ApiService.delete, path);\n      if (res.result) {\n        yield put(removeFormLocal({\n          index\n        }));\n      } else {\n        yield put(setFormLoader({\n          loader: false\n        }));\n      }\n    } catch (error) {\n      yield put(setFormLoader({\n        loader: false\n      }));\n      console.log(\"error on load user\");\n    }\n  }();\n}\nfunction addFormSaga(_ref5) {\n  let {\n    payload\n  } = _ref5;\n  return function* () {\n    try {\n      yield put(setFormLoader({\n        loader: true\n      }));\n      const path = ``;\n      const res = yield call(ApiService.post, path, payload);\n      if (res.result) {\n        yield put(addFormLocal(res));\n      } else {\n        yield put(setFormLoader({\n          loader: false\n        }));\n      }\n    } catch (error) {\n      yield put(setFormLoader({\n        loader: false\n      }));\n      console.log(\"error on load user\");\n    }\n  }();\n}\nfunction* watchOnGetForms() {\n  yield takeEvery(GET_FORMS, getFormsSaga);\n}\nfunction* watchOnGetSingleForm() {\n  yield takeEvery(GET_SINGLE_FORMS, getSingleFormSaga);\n}\nfunction* watchOnRemoveForm() {\n  yield takeEvery(REMOVE_FORM, removeFormSaga);\n}\nfunction* watchOnEditForm() {\n  yield takeEvery(EDIT_FORM, editFormSaga);\n}\nfunction* watchOnAddForm() {\n  yield takeLatest(ADD_FORM, addFormSaga);\n}\nexport default function* rootSaga() {\n  yield all([fork(watchOnGetForms), fork(watchOnGetSingleForm), fork(watchOnRemoveForm), fork(watchOnEditForm), fork(watchOnAddForm)]);\n}","map":{"version":3,"names":["all","call","select","fork","put","takeLatest","takeEvery","ADD_FORM","EDIT_FORM","REMOVE_FORM","GET_FORMS","GET_SINGLE_FORMS","addFormLocal","editFormLocal","setForms","setSingleForm","removeFormLocal","setFormLoader","ApiService","ip","token","user","getFormsSaga","_ref","payload","loader","session","host","userData","controlid","path","body","action","res","post","result","error","console","log","getSingleFormSaga","_ref2","formname","editFormSaga","_ref3","index","patch","value","removeFormSaga","_ref4","delete","addFormSaga","_ref5","watchOnGetForms","watchOnGetSingleForm","watchOnRemoveForm","watchOnEditForm","watchOnAddForm","rootSaga"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/sagas/form.ts"],"sourcesContent":["import {\r\n  all,\r\n  call,\r\n  select,\r\n  fork,\r\n  put,\r\n  takeLatest,\r\n  takeEvery,\r\n} from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_FORM,\r\n  EDIT_FORM,\r\n  REMOVE_FORM,\r\n  GET_FORMS,\r\n  GET_SINGLE_FORMS,\r\n} from \"../constants/actionTypes\";\r\nimport {\r\n  addFormLocal,\r\n  editFormLocal,\r\n  setForms,\r\n  setSingleForm,\r\n  removeFormLocal,\r\n  setFormLoader,\r\n} from \"../actions/form\";\r\nimport { ApiService } from \"../services/apiService\";\r\nimport { ip, token, user } from \"../constants/selectors\";\r\n\r\ninterface IAction {\r\n  type: string;\r\n  payload?: any;\r\n}\r\n\r\nexport interface ResponseGenerator {\r\n  [key: string]: any;\r\n}\r\n\r\nfunction* getFormsSaga({ payload }: IAction) {\r\n  try {\r\n    yield put(setFormLoader({ loader: true }));\r\n    const session: string = yield select(token);\r\n    const host: string = yield select(ip);\r\n    const userData: ResponseGenerator = yield select(user);\r\n    const controlid = userData.controlid;\r\n    const path = `/FORMS/`;\r\n    const body = {\r\n      session,\r\n      host,\r\n      controlid,\r\n      action: \"GETFORMSLIST\",\r\n    };\r\n    const res: ResponseGenerator = yield call(ApiService.post, path, body);\r\n    if (res.result) {\r\n      yield put(setForms(res));\r\n    } else {\r\n      yield put(setFormLoader({ loader: false }));\r\n    }\r\n  } catch (error: any) {\r\n    yield put(setFormLoader({ loader: false }));\r\n    console.log(\"error on load user\");\r\n  }\r\n}\r\n\r\nfunction* getSingleFormSaga({ payload }: IAction) {\r\n  try {\r\n    yield put(setFormLoader({ loader: true }));\r\n    const session: string = yield select(token);\r\n    const host: string = yield select(ip);\r\n    const userData: ResponseGenerator = yield select(user);\r\n    const controlid = userData.controlid;\r\n    const path = `/FORMS/`;\r\n    const body = {\r\n      action: \"GETFORMDATA\",\r\n      formname: payload,\r\n      session,\r\n      host,\r\n      controlid,\r\n    };\r\n    const res: ResponseGenerator = yield call(ApiService.post, path, body);\r\n    if (res.result) {\r\n      yield put(setSingleForm(res));\r\n    } else {\r\n      yield put(setFormLoader({ loader: false }));\r\n    }\r\n  } catch (error: any) {\r\n    yield put(setFormLoader({ loader: false }));\r\n    console.log(\"error on load user\");\r\n  }\r\n}\r\n\r\nfunction* editFormSaga({ payload }: IAction) {\r\n  try {\r\n    yield put(setFormLoader({ loader: true }));\r\n    const path = ``;\r\n    const body = { ...payload };\r\n    const index = body.index;\r\n    delete body.index;\r\n    const res: ResponseGenerator = yield call(ApiService.patch, path, body);\r\n    if (res.result) {\r\n      yield put(editFormLocal({ index, value: res }));\r\n    } else {\r\n      yield put(setFormLoader({ loader: false }));\r\n    }\r\n  } catch (error: any) {\r\n    yield put(setFormLoader({ loader: false }));\r\n    console.log(\"error on load user\");\r\n  }\r\n}\r\n\r\nfunction* removeFormSaga({ payload }: IAction) {\r\n  try {\r\n    yield put(setFormLoader({ loader: true }));\r\n    const index = payload.index;\r\n    const userData: ResponseGenerator = yield select(user);\r\n    const path = `user/${userData}`;\r\n    const res: ResponseGenerator = yield call(ApiService.delete, path);\r\n    if (res.result) {\r\n      yield put(removeFormLocal({ index }));\r\n    } else {\r\n      yield put(setFormLoader({ loader: false }));\r\n    }\r\n  } catch (error: any) {\r\n    yield put(setFormLoader({ loader: false }));\r\n    console.log(\"error on load user\");\r\n  }\r\n}\r\n\r\nfunction* addFormSaga({ payload }: IAction) {\r\n  try {\r\n    yield put(setFormLoader({ loader: true }));\r\n    const path = ``;\r\n    const res: ResponseGenerator = yield call(ApiService.post, path, payload);\r\n    if (res.result) {\r\n      yield put(addFormLocal(res));\r\n    } else {\r\n      yield put(setFormLoader({ loader: false }));\r\n    }\r\n  } catch (error: any) {\r\n    yield put(setFormLoader({ loader: false }));\r\n    console.log(\"error on load user\");\r\n  }\r\n}\r\n\r\nfunction* watchOnGetForms() {\r\n  yield takeEvery(GET_FORMS, getFormsSaga);\r\n}\r\n\r\nfunction* watchOnGetSingleForm() {\r\n  yield takeEvery(GET_SINGLE_FORMS, getSingleFormSaga);\r\n}\r\n\r\nfunction* watchOnRemoveForm() {\r\n  yield takeEvery(REMOVE_FORM, removeFormSaga);\r\n}\r\n\r\nfunction* watchOnEditForm() {\r\n  yield takeEvery(EDIT_FORM, editFormSaga);\r\n}\r\n\r\nfunction* watchOnAddForm() {\r\n  yield takeLatest(ADD_FORM, addFormSaga);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchOnGetForms),\r\n    fork(watchOnGetSingleForm),\r\n    fork(watchOnRemoveForm),\r\n    fork(watchOnEditForm),\r\n    fork(watchOnAddForm),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}