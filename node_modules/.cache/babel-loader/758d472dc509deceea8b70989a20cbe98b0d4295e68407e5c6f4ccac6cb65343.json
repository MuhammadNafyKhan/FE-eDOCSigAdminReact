{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/add-elements/elements/CheckBox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport { pxStringToNumber } from \"../../../helpers/pxStringToNumber\";\nimport { getFontSize } from \"../../../helpers/getFontSize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckBox = _ref => {\n  _s();\n  let {\n    width,\n    height,\n    x,\n    y,\n    name,\n    id,\n    backgroundColor = \"#84CBFF\",\n    setUpdatingElement,\n    toggleSettings,\n    updateElemet,\n    scale\n  } = _ref;\n  const setUpdatingOn = () => {\n    setUpdatingElement(true);\n  };\n  const setUpdatingOff = () => {\n    setUpdatingElement(false);\n  };\n  const fontSize = useRef(10);\n  useEffect(() => {\n    fontSize.current = getFontSize(width, height, 1) - 8;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Rnd\n  //  default={{ x, y, width, height }}\n  , {\n    scale: scale,\n    position: {\n      x,\n      y\n    },\n    size: {\n      width,\n      height\n    },\n    onMouseDown: setUpdatingOn,\n    onResizeStart: setUpdatingOn,\n    onDragStop: (e, d) => {\n      if (!(d.x === x && d.y === y)) {\n        updateElemet({\n          x: d.x,\n          y: d.y\n        }, id);\n      }\n    },\n    onResizeStop: (e, direction, ref, delta, position) => {\n      setUpdatingOff();\n      const uWidth = pxStringToNumber(ref.style.width);\n      const uHeight = pxStringToNumber(ref.style.height);\n      fontSize.current = getFontSize(uWidth, uHeight, 1) - 8;\n      updateElemet({\n        width: uWidth,\n        height: uHeight\n      }, id);\n    },\n    bounds: \"parent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: () => {\n        toggleSettings(id);\n      },\n      onMouseUp: setUpdatingOff,\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor,\n        color: \"black\",\n        fontWeight: \"bold\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: fontSize.current,\n        lineHeight: fontSize + \"px\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckBox, \"TC7F55BsuPCyDllDY4x6NcmhmiM=\");\n_c = CheckBox;\nexport default CheckBox;\nvar _c;\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"names":["React","useRef","useEffect","Rnd","pxStringToNumber","getFontSize","jsxDEV","_jsxDEV","CheckBox","_ref","_s","width","height","x","y","name","id","backgroundColor","setUpdatingElement","toggleSettings","updateElemet","scale","setUpdatingOn","setUpdatingOff","fontSize","current","position","size","onMouseDown","onResizeStart","onDragStop","e","d","onResizeStop","direction","ref","delta","uWidth","style","uHeight","bounds","children","onDoubleClick","onMouseUp","color","fontWeight","display","justifyContent","alignItems","lineHeight","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/add-elements/elements/CheckBox.tsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\nimport { pxStringToNumber } from \"../../../helpers/pxStringToNumber\";\r\nimport { getFontSize } from \"../../../helpers/getFontSize\";\r\n\r\ninterface IProps {\r\n  width: number;\r\n  height: number;\r\n  x: number;\r\n  y: number;\r\n  index: number;\r\n  name: string;\r\n  id: string;\r\n  backgroundColor?: string;\r\n  setUpdatingElement(val: boolean): void;\r\n  toggleSettings(val?: string): void;\r\n  updateElemet(values: any, name?: string): void;\r\n  scale: number;\r\n}\r\n\r\nconst CheckBox: React.FC<IProps> = ({\r\n  width,\r\n  height,\r\n  x,\r\n  y,\r\n  name,\r\n  id,\r\n  backgroundColor = \"#84CBFF\",\r\n  setUpdatingElement,\r\n  toggleSettings,\r\n  updateElemet,\r\n  scale,\r\n}) => {\r\n  const setUpdatingOn = () => {\r\n    setUpdatingElement(true);\r\n  };\r\n\r\n  const setUpdatingOff = () => {\r\n    setUpdatingElement(false);\r\n  };\r\n\r\n  const fontSize = useRef(10);\r\n\r\n  useEffect(() => {\r\n    fontSize.current = getFontSize(width, height, 1) - 8;\r\n  }, []);\r\n\r\n  return (\r\n    <Rnd\r\n      //  default={{ x, y, width, height }}\r\n      scale={scale}\r\n      position={{ x, y }}\r\n      size={{ width, height }}\r\n      onMouseDown={setUpdatingOn}\r\n      onResizeStart={setUpdatingOn}\r\n      onDragStop={(e, d) => {\r\n        if (!(d.x === x && d.y === y)) {\r\n          updateElemet({ x: d.x, y: d.y }, id);\r\n        }\r\n      }}\r\n      onResizeStop={(e, direction, ref, delta, position) => {\r\n        setUpdatingOff();\r\n        const uWidth = pxStringToNumber(ref.style.width);\r\n        const uHeight = pxStringToNumber(ref.style.height);\r\n        fontSize.current = getFontSize(uWidth, uHeight, 1) - 8;\r\n        updateElemet(\r\n          {\r\n            width: uWidth,\r\n            height: uHeight,\r\n          },\r\n          id\r\n        );\r\n      }}\r\n      bounds=\"parent\"\r\n    >\r\n      <div\r\n        onDoubleClick={() => {\r\n          toggleSettings(id);\r\n        }}\r\n        onMouseUp={setUpdatingOff}\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundColor,\r\n          color: \"black\",\r\n          fontWeight: \"bold\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          fontSize: fontSize.current,\r\n          lineHeight: fontSize + \"px\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <span>C</span>\r\n      </div>\r\n    </Rnd>\r\n  );\r\n};\r\nexport default CheckBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}