{"ast":null,"code":"var _jsxFileName = \"/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/add-participants/PDF.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadPDF } from \"../../helpers/loadDoc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page = _ref => {\n  let {\n    index,\n    style,\n    width,\n    list\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...style,\n      userSelect: \"none\"\n    },\n    id: \"pdf_page_\" + index,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      draggable: false,\n      src: list[index].image,\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_c = Page;\nconst CustomPDF = _ref2 => {\n  _s();\n  let {\n    file,\n    handlePageHeight,\n    updatePDFSettings,\n    pdf_images,\n    current_doc,\n    sigining_docs\n  } = _ref2;\n  const [mainHeight, setMainHeight] = useState(0);\n  const [pdfLoaded, setPdfLoaded] = useState(false);\n  useEffect(() => {\n    const el = document.getElementById(\"pdf-images\");\n    const height = el === null || el === void 0 ? void 0 : el.clientHeight;\n    setMainHeight(height || 0);\n  }, []);\n  useEffect(() => {\n    const curr = pdf_images[current_doc];\n    if (curr) {\n      setPdfLoaded(true);\n    } else {\n      setPdfLoaded(false);\n      loadPDF(sigining_docs[current_doc].uniqnm, current_doc);\n    }\n  }, [pdf_images]);\n  if (!pdfLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pdf-images\",\n    children: pdf_images[current_doc] && pdf_images[current_doc].map((img, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pdf_page_\" + i,\n        style: {\n          userSelect: \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: false,\n          src: img.image,\n          width: img.width * 2,\n          style: {\n            borderRight: \"2px solid #BBB6B6\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n\n// const PDF = React.memo(CustomPDF);\n_s(CustomPDF, \"MgcUu6ZMh3CMyz8RWAzSngR2Xrg=\");\n_c2 = CustomPDF;\nconst mapStateToProps = store => {\n  const {\n    settings,\n    file\n  } = store;\n  const {\n    pdf_images,\n    sigining_docs\n  } = file;\n  const {\n    current_doc\n  } = settings;\n  return {\n    pdf_images,\n    current_doc,\n    sigining_docs\n  };\n};\nexport default connect(mapStateToProps)(CustomPDF);\nvar _c, _c2;\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"CustomPDF\");","map":{"version":3,"names":["React","useEffect","useState","connect","loadPDF","jsxDEV","_jsxDEV","Page","_ref","index","style","width","list","userSelect","id","children","draggable","src","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","CustomPDF","_ref2","_s","file","handlePageHeight","updatePDFSettings","pdf_images","current_doc","sigining_docs","mainHeight","setMainHeight","pdfLoaded","setPdfLoaded","el","document","getElementById","height","clientHeight","curr","uniqnm","map","img","i","borderRight","_c2","mapStateToProps","store","settings","$RefreshReg$"],"sources":["/home/tk-lpt-739/Downloads/eDOCSigAdminReact/eDOCSigAdminReact/src/components/add-participants/PDF.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IPDFImage, ISigningDoc } from \"../../interface\";\r\nimport { IStoreState } from \"../../reducers\";\r\nimport { FixedSizeList as List } from \"react-window\";\r\nimport { loadPDF } from \"../../helpers/loadDoc\";\r\n\r\ninterface IProps {\r\n  file: any;\r\n  updatePDFSettings?(x: number, y: number, total: number): void;\r\n  handlePageHeight?(total: number): void;\r\n  sigining_docs: ISigningDoc[];\r\n  currentPage?: number;\r\n  pdf_images: IPDFImage[][];\r\n  current_doc: number;\r\n}\r\n// const Pages: React.FC<{\r\n//   total: number;\r\n//   handlePageHeight?(total: number): void;\r\n//   setWidth(width: number): void;\r\n//   updatePDFSettings?(x: number, y: number, total: number): void;\r\n//   width: number;\r\n// }> = ({ total, handlePageHeight, width, setWidth, updatePDFSettings }) => {\r\n//   const [height, setHeight] = useState(1);\r\n\r\n//   const onRenderSuccess = (p: PDFPageProxy) => {\r\n//     setWidth(p.originalWidth * 2);\r\n//     setHeight(p.originalHeight * 2);\r\n//     updatePDFSettings &&\r\n//       updatePDFSettings(p.originalWidth * 2, p.originalHeight * 2, total);\r\n//   };\r\n\r\n//   const onLoadSuccess = (p: PDFPageProxy) => {\r\n//     if (handlePageHeight) {\r\n//       handlePageHeight(total);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       {Array.from({ length: total }).map((v, i) => {\r\n//         return (\r\n//           <div key={i} id={\"pdf_page_\" + i} style={{ userSelect: \"none\" }}>\r\n//             <Page\r\n//               pageNumber={i + 1}\r\n//               width={width}\r\n//               height={height}\r\n//               //  renderMode=\"svg\"\r\n//               renderAnnotationLayer={false}\r\n//               renderTextLayer={false}\r\n//               renderInteractiveForms={false}\r\n//               onRenderSuccess={onRenderSuccess}\r\n//               onLoadSuccess={onLoadSuccess}\r\n//             />\r\n//           </div>\r\n//         );\r\n//       })}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const MemoPages = React.memo(Pages);\r\ninterface IPageProps {\r\n  index: number;\r\n  style: any;\r\n  width: number;\r\n  list: IPDFImage[];\r\n}\r\nconst Page: React.FC<IPageProps> = ({ index, style, width, list }) => (\r\n  <div style={{ ...style, userSelect: \"none\" }} id={\"pdf_page_\" + index}>\r\n    <img draggable={false} src={list[index].image} width={width} />\r\n  </div>\r\n);\r\n\r\nconst CustomPDF: React.FC<IProps> = ({\r\n  file,\r\n  handlePageHeight,\r\n  updatePDFSettings,\r\n  pdf_images,\r\n  current_doc,\r\n  sigining_docs,\r\n}) => {\r\n  const [mainHeight, setMainHeight] = useState(0);\r\n  const [pdfLoaded, setPdfLoaded] = useState(false);\r\n  useEffect(() => {\r\n    const el = document.getElementById(\"pdf-images\");\r\n    const height = el?.clientHeight;\r\n    setMainHeight(height || 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const curr = pdf_images[current_doc];\r\n    if (curr) {\r\n      setPdfLoaded(true);\r\n    } else {\r\n      setPdfLoaded(false);\r\n      loadPDF(sigining_docs[current_doc].uniqnm, current_doc);\r\n    }\r\n  }, [pdf_images]);\r\n  if (!pdfLoaded) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <div id=\"pdf-images\">\r\n      {/* <List\r\n        height={mainHeight || 0}\r\n        itemCount={pdf_images[current_doc].length}\r\n        itemSize={pdf_images[current_doc][0].height * 2}\r\n        width={pdf_images[current_doc][0].width * 2}\r\n      >\r\n        {(props) =>\r\n          Page({\r\n            ...props,\r\n            list: pdf_images[current_doc],\r\n            width: pdf_images[current_doc][0].width * 2,\r\n          })\r\n        }\r\n      </List> */}\r\n      {pdf_images[current_doc] &&\r\n        pdf_images[current_doc].map((img, i) => {\r\n          return (\r\n            <div key={i} id={\"pdf_page_\" + i} style={{ userSelect: \"none\" }}>\r\n              <img\r\n                draggable={false}\r\n                src={img.image}\r\n                width={img.width * 2}\r\n                style={{ borderRight: \"2px solid #BBB6B6\" }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const PDF = React.memo(CustomPDF);\r\n\r\nconst mapStateToProps = (store: IStoreState) => {\r\n  const { settings, file } = store;\r\n  const { pdf_images, sigining_docs } = file;\r\n  const { current_doc } = settings;\r\n  return {\r\n    pdf_images,\r\n    current_doc,\r\n    sigining_docs,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CustomPDF);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}