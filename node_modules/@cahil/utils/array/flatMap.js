"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = flatMap;

/**
 * @module array
 */
var push = Array.prototype.push;
/**
 *
 * Calls a function on every item in an array and concatenates the resulting arrays into a single flat array.
 *
 * @typeparam TValue The type of items in the input array
 * @typeparam TNext the type of items in the output array
 * @param array The input array to be mapped
 * @param fn The functions used to generate the new items
 * @return A flat array of the resulting values
 *
 * @example
 * ```typescript
 *
 * const items = flatMap(['foo', 'bar'], word => word.split())
 * // Returns ['f', 'o', 'o', 'b', 'a', 'r']
 * ```
 *
 */

function flatMap(array, fn) {
  var output = [];

  for (var i = 0; i < array.length; i++) {
    var result = fn.call(array, array[i], i);

    if (Array.isArray(result)) {
      push.apply(output, result);
    } else if (result !== null && result !== undefined) {
      throw new TypeError("flatMapArray: Callback must return an array or null, received \"".concat(result, "\" instead"));
    }
  }

  return output;
}

module.exports = flatMap;
module.exports.flatMap = flatMap;
module.exports["default"] = flatMap;