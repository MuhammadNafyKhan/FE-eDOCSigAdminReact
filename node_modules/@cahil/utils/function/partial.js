"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = partial;

/**
 * @module function
 */

/**
 *
 * Creates a function that invokes `func` with `partials` prepended to the arguments it receives.
 *
 * @param func The function to partially apply arguments to
 * @param argsBound The arguments to be partially applied
 *
 * @example
 * ```typescript
 *
 * const addNums = (a, b, c) => a + b + c
 * const addNumsTo5 = partial(addNums, 5)
 *
 * addNumsTo5(1, 3) // => 9
 * ```
 *
 */
function partial(func) {
  for (var _len = arguments.length, argsBound = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    argsBound[_key - 1] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return func.call.apply(func, [this].concat(argsBound, args));
  };
}

module.exports = partial;
module.exports.partial = partial;
module.exports["default"] = partial;